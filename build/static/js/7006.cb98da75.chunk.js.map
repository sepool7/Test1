{"version":3,"file":"static/js/7006.cb98da75.chunk.js","mappings":"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","sources":["webpack://xchain/./src/layout/explore/Wrapper/style.module.scss?529f","layout/explore/Wrapper/index.jsx","contexts/exploreContext.js","layout/explore/Sidebar.jsx","webpack://xchain/./src/layout/explore/Items/style.module.scss?47ab","layout/explore/Items/index.jsx","pages/Explore.jsx","ui/Checkbox.jsx","ui/StyledAccordion.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__+wfY0\"};","// styling\nimport styles from './style.module.scss';\n\nconst Wrapper = ({children}) => {\n    return (\n        <div className=\"section\">\n            <div className={`${styles.container} container`}>\n                {children}\n            </div>\n        </div>\n    );\n}\n\nexport default Wrapper","import {createContext, useState, useContext} from 'react';\nimport all_items from '@db/all_items';\nimport {SORTING_OPTIONS, CRYPTO_CURRENCIES} from '@constants/explore';\n\nexport const ExploreContext = createContext(undefined);\n\nexport const ExploreContextAPI = ({children}) => {\n    const items = all_items;\n    const [categories, setCategories] = useState([]);\n    const [statuses, setStatuses] = useState([]);\n    const [itemType, setItemType] = useState('');\n    const [priceRange, setPriceRange] = useState({min: '', max: ''});\n    const [sort, setSort] = useState(SORTING_OPTIONS[0]);\n    const [cryptoCurrency, setCryptoCurrency] = useState(CRYPTO_CURRENCIES[0]);\n    const [applyPriceFilter, setApplyPriceFilter] = useState(false);\n\n    const setChecked = (type, value) => {\n        switch (type) {\n            case 'categories':\n                categories.includes(value) ? setCategories(categories.filter(c => c !== value)) : setCategories([...categories, value]);\n                break;\n            case 'statuses':\n                statuses.includes(value) ? setStatuses(statuses.filter(s => s !== value)) : setStatuses([...statuses, value]);\n                break;\n            case 'types':\n                value === itemType ? setItemType('') : setItemType(value);\n                break;\n            default:\n                break;\n        }\n    }\n\n    const filteredItems = items.filter(item => {\n        return (\n            (categories.length === 0 || (item.categories && item.categories.some(category => categories.includes(category)))) &&\n            (statuses.length === 0 || (item.statuses && item.statuses.some(status => statuses.includes(status)))) &&\n            (itemType === '' || itemType === item.type) &&\n            (applyPriceFilter ? item.price >= priceRange.min && item.price <= priceRange.max : true)\n        );\n    });\n\n    const sortedItems = filteredItems.sort((a, b) => {\n        if (sort.value === 'default') {\n            return a.id - b.id;\n        } else if (sort.value === 'price-asc') {\n            return a.price - b.price;\n        } else if (sort.value === 'price-desc') {\n            return b.price - a.price;\n        } else if (sort.value === 'likes-asc') {\n            return b.likes - a.likes;\n        } else if (sort.value === 'likes-desc') {\n            return a.likes - b.likes;\n        }\n    });\n\n    return (\n        <ExploreContext.Provider value={{\n            items,\n            categories,\n            setCategories,\n            statuses,\n            setStatuses,\n            itemType,\n            setItemType,\n            priceRange,\n            setPriceRange,\n            sortedItems,\n            sort,\n            setSort,\n            setChecked,\n            cryptoCurrency,\n            setCryptoCurrency,\n            applyPriceFilter,\n            setApplyPriceFilter\n        }}>\n            {children}\n        </ExploreContext.Provider>\n    );\n}\n\nexport const useExploreContext = () => useContext(ExploreContext);\n","// styling\nimport styled from 'styled-components/macro';\n\n// components\nimport {StyledAccordionDetails} from '@ui/StyledAccordion';\nimport Checkbox from '@ui/Checkbox';\nimport {StyledAccordionSummary, StyledAccordion} from '@ui/StyledAccordion';\nimport CustomSelect from '@ui/CustomSelect';\nimport ResponsiveSidebar from '@ui/ResponsiveSidebar';\nimport {Fragment} from 'react';\n\n// hooks\nimport {useFilterContext} from '@contexts/filterContext';\nimport {useWindowSize} from 'react-use';\nimport {useExploreContext} from '@contexts/exploreContext';\nimport {useForm} from 'react-hook-form';\n\n// constants\nimport {CRYPTO_CURRENCIES, CATEGORIES, TYPE, STATUS} from '@constants/explore';\n\nconst Details = styled(StyledAccordionDetails)`\n  padding-bottom: 30px !important;\n`;\n\nconst Sidebar = () => {\n    const {\n        categories,\n        statuses,\n        itemType,\n        priceRange,\n        setPriceRange,\n        setChecked,\n        cryptoCurrency,\n        setCryptoCurrency,\n        applyPriceFilter,\n        setApplyPriceFilter\n    } = useExploreContext();\n    const {isSidebarOpen, openSidebar, closeSidebar} = useFilterContext();\n    const {register, handleSubmit, reset} = useForm();\n    const isDrawer = useWindowSize().width < 1024;\n    const SidebarWrapper = isDrawer ? ResponsiveSidebar : Fragment;\n    const wrapperProps = isDrawer ? {open: isSidebarOpen, onOpen: openSidebar, onClose: closeSidebar} : {};\n\n    const onSubmit = () => {\n        setApplyPriceFilter(true);\n    }\n\n    const onReset = () => {\n        reset();\n        setApplyPriceFilter(false);\n        setPriceRange({min: 0, max: 0});\n    }\n\n    const Summary = ({title}) => {\n        return (\n            <StyledAccordionSummary>\n                <h5>{title}</h5>\n                <i className=\"icon icon-angle-down\"/>\n            </StyledAccordionSummary>\n        );\n    }\n\n    return (\n        <SidebarWrapper {...wrapperProps}>\n            <div className=\"sidebar\">\n                <div className=\"sidebar_block pb-0\">\n                    <StyledAccordion defaultExpanded>\n                        <Summary title=\"Price range\"/>\n                        <Details>\n                            <form className=\"d-flex flex-column g-10\" onSubmit={handleSubmit(onSubmit)}>\n                                <CustomSelect className=\"outline\"\n                                              setSelected={setCryptoCurrency}\n                                              options={CRYPTO_CURRENCIES}\n                                              selected={cryptoCurrency}/>\n                                <div className=\"d-grid g-10\" style={{gridTemplateColumns: '1fr 1fr'}}>\n                                    <input type=\"text\"\n                                           className=\"field field--outline w-100\"\n                                           placeholder=\"0.00\"\n                                           {...register('min', {\n                                               required: true,\n                                               min: 0,\n                                               valueAsNumber: true,\n                                               onChange: e => setPriceRange({...priceRange, min: e.target.value}),\n                                               validate: (value) => value <= priceRange.max\n                                           })}/>\n                                    <input type=\"text\"\n                                           className=\"field field--outline w-100\"\n                                           placeholder=\"0.00\"\n                                           {...register('max', {\n                                               required: true,\n                                               min: 0,\n                                               valueAsNumber: true,\n                                               onChange: e => setPriceRange({...priceRange, max: e.target.value}),\n                                               validate: (value) => value >= priceRange.min,\n                                           })}/>\n                                </div>\n                                {\n                                    applyPriceFilter ?\n                                        <button className=\"btn btn--outline\" onClick={onReset}>\n                                            Reset\n                                        </button>\n                                        :\n                                        <button className=\"btn btn--outline\" type=\"submit\">Filter</button>\n                                }\n                            </form>\n                        </Details>\n                    </StyledAccordion>\n                </div>\n                <div className=\"sidebar_block pb-0\">\n                    <StyledAccordion defaultExpanded>\n                        <Summary title=\"Categories\"/>\n                        <Details>\n                            <ul className=\"sidebar_list\">\n                                {\n                                    CATEGORIES.map(category => (\n                                        <li className=\"sidebar_list-item\"\n                                            key={category.value}>\n                                            <Checkbox id={category.value}\n                                                      onChange={() => setChecked('categories', category.value)}\n                                                      checked={categories.includes(category.value)}/>\n                                            <label htmlFor={category.value}>{category.label}</label>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </Details>\n                    </StyledAccordion>\n                </div>\n                <div className=\"sidebar_block pb-0\">\n                    <StyledAccordion defaultExpanded>\n                        <Summary title=\"Status\"/>\n                        <Details>\n                            <ul className=\"sidebar_list\">\n                                {\n                                    STATUS.map(status => (\n                                        <li className=\"sidebar_list-item\"\n                                            key={status.value}>\n                                            <Checkbox id={status.value}\n                                                      onChange={() => setChecked('statuses', status.value)}\n                                                      checked={statuses.includes(status.value)}/>\n                                            <label htmlFor={status.value}>{status.label}</label>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </Details>\n                    </StyledAccordion>\n                </div>\n                <div className=\"sidebar_block pb-0\">\n                    <StyledAccordion defaultExpanded>\n                        <Summary title=\"Type\"/>\n                        <Details>\n                            <ul className=\"sidebar_list\">\n                                {\n                                    TYPE.map(type => (\n                                        <li className=\"sidebar_list-item\"\n                                            key={type.value}>\n                                            <Checkbox id={type.value}\n                                                      onChange={() => setChecked('types', type.value)}\n                                                      checked={itemType === type.value}/>\n                                            <label htmlFor={type.value}>{type.label}</label>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </Details>\n                    </StyledAccordion>\n                </div>\n            </div>\n        </SidebarWrapper>\n    )\n}\n\nexport default Sidebar","// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"style_grid__AkED9\"};","// styling\nimport styles from './style.module.scss';\n\n// components\nimport CustomSelect from '@ui/CustomSelect';\nimport ItemsGrid from '@components/ItemsGrid';\nimport Pagination from '@ui/Pagination';\nimport StickyFilterBar from '@ui/StickyFilterBar';\nimport NothingFound from '@components/NothingFound';\n\n// constants\nimport {SORTING_OPTIONS} from '@constants/explore';\n\n// hooks\nimport {useWindowSize} from 'react-use';\nimport usePagination from '@hooks/usePagination';\nimport {useExploreContext} from '@contexts/exploreContext';\n\nconst Items = () => {\n    const {sortedItems, sort, setSort} = useExploreContext();\n    const pagination = usePagination(sortedItems, 12);\n    const isTablet = useWindowSize().width < 1024;\n\n    return (\n        <div className=\"d-flex flex-column g-20\">\n            <div className=\"d-flex flex-wrap align-items-center justify-content-between g-10\" ref={pagination.containerRef}>\n                {isTablet && <StickyFilterBar bottom=\"#items\"/>}\n                <span className=\"text-sm\">{pagination.showingOf()}</span>\n                <CustomSelect options={SORTING_OPTIONS} selected={sort} setSelected={setSort} variant=\"minimal\" />\n            </div>\n            <div>\n                {\n                    sortedItems.length > 0 ?\n                        <ItemsGrid className={styles.grid} items={pagination.currentItems()} />\n                        :\n                        <NothingFound />\n                }\n                {pagination.maxPage > 1 && <Pagination pagination={pagination} />}\n            </div>\n        </div>\n    )\n}\n\nexport default Items","// components\nimport Title from '@components/Title';\nimport SimplePageHeader from '@components/SimplePageHeader';\nimport Wrapper from '@layout/explore/Wrapper';\nimport Sidebar from '@layout/explore/Sidebar';\nimport Items from '@layout/explore/Items';\n\n// context\nimport {FilterContextAPI} from '@contexts/filterContext';\nimport {ExploreContextAPI} from '@contexts/exploreContext';\n\nconst Explore = () => {\n    return (\n        <>\n            <Title title=\"Explore\" />\n            <SimplePageHeader title=\"Explore\" />\n            <main>\n                <ExploreContextAPI>\n                    <FilterContextAPI>\n                        <Wrapper>\n                            <Sidebar />\n                            <Items />\n                        </Wrapper>\n                    </FilterContextAPI>\n                </ExploreContextAPI>\n            </main>\n        </>\n    )\n}\n\nexport default Explore","// utils\nimport PropTypes from 'prop-types';\nimport {memo} from 'react';\n\nconst Checkbox = ({id, onChange, ...props}) => {\n    return (\n        <div className=\"checkbox\">\n            <input id={id} type=\"checkbox\" onChange={onChange} {...props}/>\n            <label className=\"d-flex align-items-center justify-content-center\" htmlFor={id}>\n                <i className=\"icon icon-check-solid\"/>\n            </label>\n        </div>\n    );\n}\n\nCheckbox.propTypes = {\n    id: PropTypes.string.isRequired,\n    onChange: PropTypes.func\n}\n\nexport default memo(Checkbox);","// styling\nimport styled from 'styled-components/macro';\n\n// components\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\n\nexport const StyledAccordion = styled(Accordion)`\n  background: transparent !important;\n  box-shadow: none !important;\n  margin: 0 !important;\n\n  &:before {\n    display: none;\n  }\n`;\n\nexport const StyledAccordionSummary = styled(AccordionSummary)`\n  padding: 0 !important;\n  color: var(--text-light) !important;\n  min-height: 0 !important;\n\n  .MuiAccordionSummary-content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin: 0 !important;\n\n    .icon {\n      transition: all var(--transition);\n      will-change: transform;\n\n      &:hover {\n        color: var(--accent);\n      }\n    }\n\n    &.Mui-expanded .icon {\n      transform: rotate(180deg);\n    }\n  }\n`;\n\nexport const StyledAccordionDetails = styled(AccordionDetails)`\n  padding: 0 !important;\n`;"],"names":["_ref","children","_jsx","className","concat","styles","ExploreContext","createContext","undefined","ExploreContextAPI","items","all_items","categories","setCategories","useState","statuses","setStatuses","itemType","setItemType","priceRange","setPriceRange","min","max","sort","setSort","SORTING_OPTIONS","cryptoCurrency","setCryptoCurrency","CRYPTO_CURRENCIES","applyPriceFilter","setApplyPriceFilter","sortedItems","filter","item","length","some","category","includes","status","type","price","a","b","value","id","likes","Provider","setChecked","c","s","useExploreContext","useContext","Details","styled","StyledAccordionDetails","withConfig","componentId","Sidebar","isSidebarOpen","openSidebar","closeSidebar","useFilterContext","register","handleSubmit","reset","useForm","isDrawer","useWindowSize","width","SidebarWrapper","ResponsiveSidebar","Fragment","wrapperProps","open","onOpen","onClose","Summary","title","_jsxs","StyledAccordionSummary","StyledAccordion","defaultExpanded","onSubmit","CustomSelect","setSelected","options","selected","style","gridTemplateColumns","placeholder","required","valueAsNumber","onChange","e","target","validate","onClick","onReset","CATEGORIES","map","Checkbox","checked","htmlFor","label","STATUS","TYPE","Items","pagination","usePagination","isTablet","ref","containerRef","StickyFilterBar","bottom","showingOf","variant","ItemsGrid","currentItems","NothingFound","maxPage","Pagination","Explore","_Fragment","Title","SimplePageHeader","FilterContextAPI","Wrapper","props","memo","Accordion","AccordionSummary","AccordionDetails"],"sourceRoot":""}