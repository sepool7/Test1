{"ast":null,"code":"import _styled from \"styled-components\"; // styling\nvar _jsxFileName = \"D:\\\\react-project\\\\ChainblockTicket2\\\\Template\\\\src\\\\layout\\\\login\\\\PasswordReminder.jsx\",\n  _s = $RefreshSig$();\n// components\nimport StyledModal from '@ui/StyledModal';\nimport { toast } from 'react-toastify';\nimport GradientBtn from '@ui/GradientBtn';\n\n// hooks\nimport { useForm } from 'react-hook-form';\n\n// utils\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledPasswordReminder = _styled(StyledModal).withConfig({\n  displayName: \"PasswordReminder__StyledPasswordReminder\",\n  componentId: \"sc-1l3k575-0\"\n})([\"text-align:center;.content{max-width:400px;&_title{margin-bottom:20px;}}\"]);\n_c = StyledPasswordReminder;\nconst ModalWindow = ({\n  isModalVisible,\n  setIsModalVisible\n}) => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm();\n  const onSubmit = () => {\n    reset();\n    setIsModalVisible(false);\n    toast.success('New password was sent to your email');\n  };\n  const handleCancel = () => {\n    reset();\n    setIsModalVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(StyledPasswordReminder, {\n    open: isModalVisible,\n    onClose: handleCancel,\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"content_title\",\n      children: \"Your Email address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex flex-column g-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: classNames('field field--outline', {\n          'field--error': errors.email\n        }),\n        type: \"text\",\n        placeholder: \"Email\",\n        ...register('email', {\n          required: true,\n          pattern: /^\\S+@\\S+$/i\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GradientBtn, {\n        tag: \"button\",\n        type: \"submit\",\n        onClick: handleSubmit(onSubmit),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(ModalWindow, \"Vnzec1THpDjtAzuDkiQjJlUcL4o=\", false, function () {\n  return [useForm];\n});\n_c2 = ModalWindow;\nexport default ModalWindow;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledPasswordReminder\");\n$RefreshReg$(_c2, \"ModalWindow\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","StyledModal","toast","GradientBtn","useForm","classNames","jsxDEV","_jsxDEV","StyledPasswordReminder","styled","withConfig","displayName","componentId","_c","ModalWindow","isModalVisible","setIsModalVisible","register","handleSubmit","formState","errors","reset","onSubmit","success","handleCancel","open","onClose","children","className","fileName","lineNumber","columnNumber","email","type","placeholder","required","pattern","tag","onClick","_c2","$RefreshReg$"],"sources":["D:/react-project/ChainblockTicket2/Template/src/layout/login/PasswordReminder.jsx"],"sourcesContent":["// styling\nimport styled from 'styled-components/macro';\n\n// components\nimport StyledModal from '@ui/StyledModal';\nimport {toast} from 'react-toastify';\nimport GradientBtn from '@ui/GradientBtn';\n\n// hooks\nimport {useForm} from 'react-hook-form';\n\n// utils\nimport classNames from 'classnames';\n\nconst StyledPasswordReminder = styled(StyledModal)`\n  text-align: center;\n  \n  .content {\n    max-width: 400px;\n    \n    &_title {\n      margin-bottom: 20px;\n    }\n  }\n`;\n\nconst ModalWindow = ({isModalVisible, setIsModalVisible}) => {\n    const {register, handleSubmit, formState: {errors}, reset} = useForm();\n\n    const onSubmit = () => {\n        reset();\n        setIsModalVisible(false);\n        toast.success('New password was sent to your email');\n    }\n\n    const handleCancel = () => {\n        reset();\n        setIsModalVisible(false);\n    }\n\n    return (\n        <StyledPasswordReminder open={isModalVisible} onClose={handleCancel}>\n            <h6 className=\"content_title\">Your Email address</h6>\n            <form className=\"d-flex flex-column g-20\">\n                <input className={classNames('field field--outline', {'field--error': errors.email})}\n                       type=\"text\"\n                       placeholder=\"Email\"\n                       {...register('email', {required: true, pattern: /^\\S+@\\S+$/i})} />\n                <GradientBtn tag=\"button\" type=\"submit\" onClick={handleSubmit(onSubmit)}>Send</GradientBtn>\n            </form>\n        </StyledPasswordReminder>\n    )\n}\n\nexport default ModalWindow"],"mappings":"yCAAA;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAGA;AACA,OAAOC,WAAW,MAAM,iBAAiB;AACzC,SAAQC,KAAK,QAAO,gBAAgB;AACpC,OAAOC,WAAW,MAAM,iBAAiB;;AAEzC;AACA,SAAQC,OAAO,QAAO,iBAAiB;;AAEvC;AACA,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,sBAAsB,GAAGC,OAAM,CAACR,WAAW,CAAC,CAAAS,UAAA;EAAAC,WAAA;EAAAC,WAAA;AAAA,gFAUjD;AAACC,EAAA,GAVIL,sBAAsB;AAY5B,MAAMM,WAAW,GAAGA,CAAC;EAACC,cAAc;EAAEC;AAAiB,CAAC,KAAK;EAAAjB,EAAA;EACzD,MAAM;IAACkB,QAAQ;IAAEC,YAAY;IAAEC,SAAS,EAAE;MAACC;IAAM,CAAC;IAAEC;EAAK,CAAC,GAAGjB,OAAO,CAAC,CAAC;EAEtE,MAAMkB,QAAQ,GAAGA,CAAA,KAAM;IACnBD,KAAK,CAAC,CAAC;IACPL,iBAAiB,CAAC,KAAK,CAAC;IACxBd,KAAK,CAACqB,OAAO,CAAC,qCAAqC,CAAC;EACxD,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBH,KAAK,CAAC,CAAC;IACPL,iBAAiB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,oBACIT,OAAA,CAACC,sBAAsB;IAACiB,IAAI,EAAEV,cAAe;IAACW,OAAO,EAAEF,YAAa;IAAAG,QAAA,gBAChEpB,OAAA;MAAIqB,SAAS,EAAC,eAAe;MAAAD,QAAA,EAAC;IAAkB;MAAAE,QAAA,EAAA/B,YAAA;MAAAgC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrDxB,OAAA;MAAMqB,SAAS,EAAC,yBAAyB;MAAAD,QAAA,gBACrCpB,OAAA;QAAOqB,SAAS,EAAEvB,UAAU,CAAC,sBAAsB,EAAE;UAAC,cAAc,EAAEe,MAAM,CAACY;QAAK,CAAC,CAAE;QAC9EC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,OAAO;QAAA,GACfjB,QAAQ,CAAC,OAAO,EAAE;UAACkB,QAAQ,EAAE,IAAI;UAAEC,OAAO,EAAE;QAAY,CAAC;MAAC;QAAAP,QAAA,EAAA/B,YAAA;QAAAgC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACzExB,OAAA,CAACJ,WAAW;QAACkC,GAAG,EAAC,QAAQ;QAACJ,IAAI,EAAC,QAAQ;QAACK,OAAO,EAAEpB,YAAY,CAACI,QAAQ,CAAE;QAAAK,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAA/B,YAAA;QAAAgC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAF,QAAA,EAAA/B,YAAA;MAAAgC,UAAA;MAAAC,YAAA;IAAA,OACzF,CAAC;EAAA;IAAAF,QAAA,EAAA/B,YAAA;IAAAgC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEjC,CAAC;AAAAhC,EAAA,CA1BKe,WAAW;EAAA,QACgDV,OAAO;AAAA;AAAAmC,GAAA,GADlEzB,WAAW;AA4BjB,eAAeA,WAAW;AAAA,IAAAD,EAAA,EAAA0B,GAAA;AAAAC,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}