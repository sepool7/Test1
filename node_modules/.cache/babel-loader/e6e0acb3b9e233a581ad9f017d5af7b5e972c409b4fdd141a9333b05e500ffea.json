{"ast":null,"code":"var _s = $RefreshSig$();\n// hooks\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nconst ScrollToTop = ({\n  children\n}) => {\n  _s();\n  const {\n    pathname\n  } = useLocation();\n  useEffect(() => {\n    const canControlScrollRestoration = ('scrollRestoration' in window.history);\n    if (canControlScrollRestoration) {\n      window.history.scrollRestoration = 'manual';\n    }\n    window.scrollTo(0, 0);\n  }, [pathname]);\n  return children;\n};\n_s(ScrollToTop, \"6KT8uIWNriCL0EQ7xUoMQc7xtvY=\", false, function () {\n  return [useLocation];\n});\n_c = ScrollToTop;\nexport default ScrollToTop;\nvar _c;\n$RefreshReg$(_c, \"ScrollToTop\");","map":{"version":3,"names":["useEffect","useLocation","ScrollToTop","children","_s","pathname","canControlScrollRestoration","window","history","scrollRestoration","scrollTo","_c","$RefreshReg$"],"sources":["D:/react-project/ChainblockTicket2/Template/src/components/ScrollToTop.jsx"],"sourcesContent":["// hooks\nimport {useEffect} from 'react';\nimport {useLocation} from 'react-router-dom';\n\nconst ScrollToTop = ({children}) => {\n    const {pathname} = useLocation();\n\n    useEffect(() => {\n        const canControlScrollRestoration = 'scrollRestoration' in window.history\n        if (canControlScrollRestoration) {\n            window.history.scrollRestoration = 'manual';\n        }\n\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return children;\n}\n\nexport default ScrollToTop"],"mappings":";AAAA;AACA,SAAQA,SAAS,QAAO,OAAO;AAC/B,SAAQC,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM;IAACC;EAAQ,CAAC,GAAGJ,WAAW,CAAC,CAAC;EAEhCD,SAAS,CAAC,MAAM;IACZ,MAAMM,2BAA2B,IAAG,mBAAmB,IAAIC,MAAM,CAACC,OAAO;IACzE,IAAIF,2BAA2B,EAAE;MAC7BC,MAAM,CAACC,OAAO,CAACC,iBAAiB,GAAG,QAAQ;IAC/C;IAEAF,MAAM,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACzB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,OAAOF,QAAQ;AACnB,CAAC;AAAAC,EAAA,CAbKF,WAAW;EAAA,QACMD,WAAW;AAAA;AAAAU,EAAA,GAD5BT,WAAW;AAejB,eAAeA,WAAW;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}