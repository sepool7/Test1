{"version":3,"file":"static/js/2868.2326746a.chunk.js","mappings":"kHACA,QAAyB,sB,eCKzB,MAiBA,EAjBsBA,IAAwB,IAAvB,MAACC,EAAK,SAAEC,GAASF,EACpC,OACIG,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcH,SAAA,EAC1BI,EAAAA,EAAAA,KAAA,MAAAJ,SAAKD,IACJC,IACC,C,mCCVd,QAA4B,yBAA5B,EAA2D,mB,oECc3D,MAwBA,EAxBcF,IAAkC,IAAjC,MAACO,EAAK,GAAEC,EAAK,eAAcR,EACtC,MAAOS,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAE3C,OACIR,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAAQ,OAAKP,EAAgB,8BAA6BH,SAAA,EAC5DI,EAAAA,EAAAA,KAACO,EAAAA,EAAS,CAACT,UAAWC,EAAYS,IAAKP,EAAOQ,IAAI,iBAClDT,EAAAA,EAAAA,KAACU,EAAAA,EAAW,CAACZ,UAAU,YAAYa,IAAI,SAASC,QAASA,IAAOR,GAAa,GAAO,aAAW,aAAYR,UACvGI,EAAAA,EAAAA,KAAA,KAAGF,UAAU,4BAEjBE,EAAAA,EAAAA,KAACa,EAAAA,EAAW,CAACC,KAAMX,EAAWY,QAASA,IAAMX,GAAa,GAAQY,QAAS,CAACC,KAAM,mBAAmBrB,UACjGI,EAAAA,EAAAA,KAACkB,EAAAA,EAAO,CAACpB,UAAU,YACVqB,QAASjB,EACTkB,KAAM,CAACC,WAAY,CAACC,SAAU,EAAGC,KAAM,IACvCC,MAAOA,IAAMpB,GAAa,SAErC,C,oJCvBd,MAWA,EAXqBqB,KAEbzB,EAAAA,EAAAA,KAAA,WAAAJ,UACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWF,SAAA,EACtBI,EAAAA,EAAAA,KAAC0B,EAAAA,EAAa,CAAC/B,MAAM,4BACrBK,EAAAA,EAAAA,KAAC2B,EAAAA,EAAK,CAAC1B,MAAOA,Q,yGCE9B,MAAM2B,GAAeC,EAAAA,EAAAA,SAAOC,EAAAA,GAAMC,WAAA,CAAAC,YAAA,eAAbH,CAAa,q5BA4GlC,EA1BoBnC,IAA2B,IAA1B,SAACE,KAAaqC,GAAMvC,EACrC,MAAM,WAACwC,EAAU,aAAEC,IAAgBC,EAAAA,EAAAA,KAOnC,OALAC,EAAAA,EAAAA,YAAU,KACNJ,EAAMnB,KAAOoB,IAAeC,GAAc,GAE3C,CAACF,EAAMnB,QAGNd,EAAAA,EAAAA,KAAC4B,EAAY,IAAKK,EAAOK,sBAAoB,EAAA1C,UACzCI,EAAAA,EAAAA,KAACuC,EAAAA,EAAI,CAACC,GAAIP,EAAMnB,KAAM2B,QAAS,IAAI7C,UAC/BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BF,SAAA,EAC1CI,EAAAA,EAAAA,KAAA,KAAGF,UAAU,6BAA6Bc,QAASqB,EAAMlB,UACxDnB,QAGE,C","sources":["webpack://xchain/./src/components/SectionHeader/style.module.scss?8bfe","components/SectionHeader/index.jsx","webpack://xchain/./src/components/Video/style.module.scss?f9e4","components/Video/index.jsx","layout/home/Presentation.jsx","ui/StyledModal.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"style_header__tGZyl\"};","// styling\nimport styles from './style.module.scss';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst SectionHeader = ({title, children}) => {\n    return (\n        <div className={styles.header}>\n            <h3>{title}</h3>\n            {children}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n    link: PropTypes.shape({\n        href: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    })\n}\n\nexport default SectionHeader","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__fVSPL\",\"img\":\"style_img__GPH7O\"};","// styling\nimport styles from './style.module.scss';\n\n// components\nimport LazyImage from '@components/LazyImage';\nimport GradientBtn from '@ui/GradientBtn';\nimport YouTube from 'react-youtube';\nimport StyledModal from '@ui/StyledModal';\n\n// utils\nimport PropTypes from 'prop-types';\n\n// hooks\nimport {useState} from 'react';\n\nconst Video = ({cover, id = '5_Blq9W9cT8'}) => {\n    const [modalOpen, setModalOpen] = useState(false);\n\n    return (\n        <div className={`${styles.container} video-container border-10`}>\n            <LazyImage className={styles.img} src={cover} alt=\"Video cover\" />\n            <GradientBtn className=\"btn--play\" tag=\"button\" onClick={() =>  setModalOpen(true)} aria-label=\"Play video\">\n                <i className=\"icon icon-play-solid\" />\n            </GradientBtn>\n            <StyledModal open={modalOpen} onClose={() => setModalOpen(false)} classes={{root: 'video-container'}}>\n                <YouTube className=\"border-10\"\n                         videoId={id}\n                         opts={{playerVars: {autoplay: 1, mute: 1}}}\n                         onEnd={() => setModalOpen(false)} />\n            </StyledModal>\n        </div>\n    )\n}\n\nVideo.propTypes = {\n    cover: PropTypes.string.isRequired,\n    id: PropTypes.string\n}\n\nexport default Video","// components\nimport Video from '@components/Video';\nimport SectionHeader from '@components/SectionHeader';\n\n// assets\nimport cover from '@assets/home/cover.webp';\n\nconst Presentation = () => {\n    return (\n        <section>\n            <div className=\"container\">\n                <SectionHeader title=\"Meet ChainBlock âš¡\" />\n                <Video cover={cover} />\n            </div>\n        </section>\n    )\n}\n\nexport default Presentation","// styling\nimport styled from 'styled-components/macro';\n\n// components\nimport Modal from '@mui/material/Modal';\nimport Grow from '@mui/material/Grow';\n\n// hooks\nimport {useEffect} from 'react';\nimport useScrollLock from '@hooks/useScrollLock';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst ModalWrapper = styled(Modal)`\n  padding: 20px;\n  height: 100vh;\n  overflow-y: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 100000 !important;\n\n  .MuiBackdrop-root {\n    background: rgba(1, 1, 1, .6);\n  }\n\n  .content {\n    padding: 30px 20px;\n    position: relative;\n    flex: 1;\n    max-width: 1000px;\n    overflow: visible;\n    \n    .search-form {\n      margin: 10px 0;\n    }\n\n    .icon-close {\n      position: absolute;\n      top: 10px;\n      right: 10px;\n      font-size: 20px;\n      color: var(--divider);\n      transition: all var(--transition);\n      cursor: pointer;\n\n      &:hover {\n        color: var(--text-light);\n      }\n    }\n  }\n\n  &.video-container .content {\n    iframe {\n      aspect-ratio: 16 / 9;\n    }\n\n    .icon-close {\n      top: -10px;\n      right: -10px;\n      background: var(--accent);\n      width: 25px;\n      height: 25px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      border-radius: 50%;\n      font-size: 14px;\n      will-change: transform;\n\n      &:hover {\n        transform: scale(1.1);\n        color: var(--bg-primary);\n      }\n    }\n  }\n\n  @media screen and (min-width: 414px) {\n    .content {\n      padding: 40px 30px;\n\n      .icon {\n        top: 20px;\n        right: 20px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    .content {\n      padding: 50px 40px;\n    }\n  }\n`;\n\nconst StyledModal = ({children, ...props}) => {\n    const {lockScroll, unlockScroll} = useScrollLock();\n\n    useEffect(() => {\n        props.open ? lockScroll() : unlockScroll();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.open]);\n\n    return (\n        <ModalWrapper {...props} closeAfterTransition>\n            <Grow in={props.open} timeout={300}>\n                <div className=\"content bg-tertiary border-10\">\n                    <i className=\"icon icon-xmark icon-close\" onClick={props.onClose}/>\n                    {children}\n                </div>\n            </Grow>\n        </ModalWrapper>\n    );\n}\n\nStyledModal.propTypes = {\n    children: PropTypes.node.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default StyledModal"],"names":["_ref","title","children","_jsxs","className","styles","_jsx","cover","id","modalOpen","setModalOpen","useState","concat","LazyImage","src","alt","GradientBtn","tag","onClick","StyledModal","open","onClose","classes","root","YouTube","videoId","opts","playerVars","autoplay","mute","onEnd","Presentation","SectionHeader","Video","ModalWrapper","styled","Modal","withConfig","componentId","props","lockScroll","unlockScroll","useScrollLock","useEffect","closeAfterTransition","Grow","in","timeout"],"sourceRoot":""}