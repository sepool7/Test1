{"version":3,"file":"static/js/16.7e2ac39b.chunk.js","mappings":"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","sources":["assets/xchain.svg","webpack://xchain/./src/components/CollectionItem/style.module.scss?68d3","components/CollectionItem/index.jsx","components/LazyImage.jsx","webpack://xchain/./src/components/SectionHeader/style.module.scss?8bfe","components/SectionHeader/index.jsx","components/Spring.jsx","webpack://xchain/./src/layout/home2/FeaturedCollections/style.module.scss?a760","db/featured.js","layout/home2/FeaturedCollections/index.jsx","webpack://xchain/./src/ui/AuthorTag/style.module.scss?ed5b","ui/AuthorTag/index.jsx","ui/LinkWithArrow.jsx","../node_modules/src/observe.ts","../node_modules/src/InView.tsx","../node_modules/src/useInView.tsx"],"sourcesContent":["var _path, _path2, _path3, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgXchain(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 38,\n    height: 38,\n    viewBox: \"0 0 38 38\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38 19C38 8.50659 29.4934 2.5255e-06 19 2.98418e-06C8.50659 3.44286e-06 -1.2892e-06 8.50659 -8.30516e-07 19C-3.71835e-07 29.4934 8.50659 38 19 38C29.4934 38 38 29.4934 38 19Z\",\n    fill: \"url(#paint0_radial_486_4722)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38 19C38 8.50659 29.4934 2.5255e-06 19 2.98418e-06C8.50659 3.44286e-06 -1.2892e-06 8.50659 -8.30516e-07 19C-3.71835e-07 29.4934 8.50659 38 19 38C29.4934 38 38 29.4934 38 19Z\",\n    fill: \"url(#paint1_linear_486_4722)\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.343 21.3144C28.7415 18.3513 29.0759 14.2884 30.8244 11.9876C31.3312 11.3287 33.3517 9.58194 36.1948 10.9199C34.4362 7.18308 31.4968 4.11355 27.8562 2.18939C29.2601 3.98854 29.2888 6.24718 27.0639 8.20682C24.5316 10.4384 20.5617 11.0061 14.0087 7.21518C11.2838 5.63902 8.39842 5.07309 5.73434 5.39407C2.95706 8.10208 1.00418 11.6514 0.292969 15.6332C4.54504 10.5229 10.9814 11.4605 13.7114 14.8358C15.9633 17.6215 15.8383 22.5375 11.6724 25.9685C9.22958 28.1292 5.70223 29.006 2.41985 28.288C3.73077 30.6227 5.52147 32.6533 7.6568 34.2446C11.3767 34.6838 15.3416 32.8205 17.9128 29.6209C21.8861 24.6796 26.3595 25.6881 28.6266 28.3843C29.9409 29.9486 30.2399 32.7631 28.4137 35.5015C31.2957 33.8527 33.7047 31.4707 35.3856 28.6107C36.0022 25.2033 32.7519 23.0477 31.3447 21.3144H31.343Z\",\n    fill: \"url(#paint2_linear_486_4722)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint0_radial_486_4722\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(22 24) rotate(50.3322) scale(26.6317 26.6317)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#424242\",\n    stopOpacity: 0\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.703125,\n    stopColor: \"#424242\",\n    stopOpacity: 0.505208\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#424242\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_486_4722\",\n    x1: 12,\n    y1: -2.5,\n    x2: 61,\n    y2: 99.5,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#FFFEFE\",\n    stopOpacity: 0.98\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.02,\n    stopColor: \"#FFF2EC\",\n    stopOpacity: 0.78\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.03,\n    stopColor: \"#FFE6DB\",\n    stopOpacity: 0.6\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.05,\n    stopColor: \"#FFDDCD\",\n    stopOpacity: 0.44\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.07,\n    stopColor: \"#FFD4C1\",\n    stopOpacity: 0.3\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.09,\n    stopColor: \"#FFCEB8\",\n    stopOpacity: 0.19\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.11,\n    stopColor: \"#FFC8B0\",\n    stopOpacity: 0.11\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.13,\n    stopColor: \"#FFC5AB\",\n    stopOpacity: 0.05\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.16,\n    stopColor: \"#FFC3A8\",\n    stopOpacity: 0.01\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.19,\n    stopColor: \"#FFC2A7\",\n    stopOpacity: 0\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint2_linear_486_4722\",\n    x1: 9.49902,\n    y1: 4,\n    x2: 28.999,\n    y2: 25.5,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#FCB808\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#F80C7D\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgXchain);\nexport default __webpack_public_path__ + \"static/media/xchain.f88c8bc1706c6340e80d90a8cc12f3e5.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"style_wrapper__zgyRy\",\"wrapper_content\":\"style_wrapper_content__57WjW\",\"qty\":\"style_qty__2OQdk\",\"media\":\"style_media__UdV6g\",\"media_cover\":\"style_media_cover__Xv6lp\",\"media_thumbs\":\"style_media_thumbs__BXLql\",\"slide\":\"style_slide__I0aZQ\"};","// styling\nimport styles from './style.module.scss';\n\n// components\nimport AuthorTag from '@ui/AuthorTag';\nimport {Swiper, SwiperSlide} from 'swiper/react';\nimport {Autoplay, EffectFade, Thumbs} from 'swiper';\nimport Spring from '@components/Spring';\n\n// hooks\nimport {useState} from 'react';\n\n// utils\nimport {addZero} from '@utils/helpers';\n\nconst CollectionItem = ({item, index, isPrivate = false}) => {\n    const [thumbsSwiper, setThumbsSwiper] = useState(null);\n\n    return (\n        <Spring index={index}>\n            <div className={`${styles.wrapper} border-hover bg-primary`}>\n                <div className={styles.wrapper_content}>\n                    <h4>{item.title}</h4>\n                    <h6 className={styles.qty}>{addZero(item.qty)} NFT</h6>\n                    <AuthorTag avatar={item.author.avatar}\n                               name={item.author.nickname}\n                               style={{pointerEvents: isPrivate ? 'none' : 'auto'}}/>\n                </div>\n                <div className={`${styles.media} shadow-overlay border-10`}>\n                    <div>\n                        <Swiper className={styles.media_cover}\n                                modules={[EffectFade, Thumbs, Autoplay]}\n                                effect=\"fade\"\n                                fadeEffect={{crossFade: true}}\n                                loop={true}\n                                speed={1500}\n                                thumbs={{swiper: thumbsSwiper && !thumbsSwiper.destroyed ? thumbsSwiper : null}}\n                                autoplay={{delay: 3000}}>\n                            {\n                                item.media.map((media, index) => (\n                                    <SwiperSlide key={index}>\n                                        <img src={media.full} alt={item.title}/>\n                                    </SwiperSlide>\n                                ))\n                            }\n                        </Swiper>\n                        <Swiper className={styles.media_thumbs}\n                                onSwiper={setThumbsSwiper}\n                                modules={[Thumbs]}\n                                spaceBetween={10}\n                                slidesPerView=\"auto\"\n                                breakpoints={{\n                                    0: {\n                                        slidesPerView: 3\n                                    }\n                                }}\n                                loop={true}\n                                speed={1500}>\n                            {\n                                item.media.map((media, index) => (\n                                    <SwiperSlide className={`${styles.slide} square border-10`} key={index}>\n                                        <img src={media.thumbnail} alt={item.title}/>\n                                    </SwiperSlide>\n                                ))\n                            }\n                        </Swiper>\n                    </div>\n                </div>\n            </div>\n        </Spring>\n    )\n}\n\nexport default CollectionItem","// components\nimport {LazyLoadImage} from 'react-lazy-load-image-component';\n\n// styles\nimport 'react-lazy-load-image-component/src/effects/opacity.css';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst LazyImage = ({src, alt, effect = 'blur', className, ...props}) => {\n    return (\n        <LazyLoadImage\n            src={src}\n            alt={alt}\n            effect={effect}\n            wrapperClassName={`${className || ''} lazy-image`}\n            {...props}\n        />\n    );\n}\n\nLazyImage.propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    effect: PropTypes.oneOf(['blur', 'opacity']),\n    className: PropTypes.string,\n}\n\nexport default LazyImage","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"style_header__tGZyl\"};","// styling\nimport styles from './style.module.scss';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst SectionHeader = ({title, children}) => {\n    return (\n        <div className={styles.header}>\n            <h3>{title}</h3>\n            {children}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n    link: PropTypes.shape({\n        href: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired\n    })\n}\n\nexport default SectionHeader","// components\nimport {animated, useSpring} from '@react-spring/web';\n\n// hooks\nimport {useInView} from 'react-intersection-observer';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst Spring = ({children, index = 1, className, type = 'slide', delay, ...props}) => {\n    const [ref, inView] = useInView({\n        threshold: 0.2,\n        triggerOnce: true\n    });\n\n    const common = {\n        config: {duration: 300, mass: 1, tension: 300, friction: 30},\n        delay: props.delay ? props.delay : 100 * index,\n    }\n\n    const slide = useSpring({\n        from: {transform: 'translateY(40px)', opacity: 0},\n        to: {transform: inView ? 'translateY(0px)' : 'translateY(40px)', opacity: inView ? 1 : 0},\n        ...common,\n        ...props\n    });\n\n    const fade = useSpring({\n        from: {opacity: 0},\n        to: {opacity: inView ? 1 : 0},\n        ...common,\n        ...props\n    });\n\n    const grow = useSpring({\n        from: {transform: 'scale(0.4)'},\n        to: {transform: inView ? 'scale(1)' : 'scale(0.4)'},\n        ...common,\n        ...props\n    });\n\n    const spring = {\n        slide,\n        fade,\n        grow\n    }\n\n    return (\n        <animated.div className={className ? className : ''} style={spring[type]} ref={ref}>\n            {children}\n        </animated.div>\n    )\n}\n\nSpring.propTypes = {\n    children: PropTypes.node.isRequired,\n    index: PropTypes.number,\n    className: PropTypes.string,\n    type: PropTypes.oneOf(['slide', 'fade', 'grow']),\n    delay: PropTypes.number\n}\n\nexport default Spring","// extracted by mini-css-extract-plugin\nexport default {\"grid\":\"style_grid__t9aaw\"};","import avatar1 from '@assets/home2/featured/avatar1.webp';\nimport thumb1_1 from '@assets/home2/featured/thumb1-1.webp';\nimport thumb1_2 from '@assets/home2/featured/thumb1-2.webp';\nimport thumb1_3 from '@assets/home2/featured/thumb1-3.webp';\nimport thumb1_4 from '@assets/home2/featured/thumb1-4.webp';\nimport cover1_1 from '@assets/home2/featured/cover1-1.webp';\nimport cover1_2 from '@assets/home2/featured/cover1-2.webp';\nimport cover1_3 from '@assets/home2/featured/cover1-3.webp';\nimport cover1_4 from '@assets/home2/featured/cover1-4.webp';\n\nimport avatar2 from '@assets/home2/featured/avatar2.webp';\nimport thumb2_1 from '@assets/home2/featured/thumb2-1.webp';\nimport thumb2_2 from '@assets/home2/featured/thumb2-2.webp';\nimport thumb2_3 from '@assets/home2/featured/thumb2-3.webp';\nimport thumb2_4 from '@assets/home2/featured/thumb2-4.webp';\nimport cover2_1 from '@assets/home2/featured/cover2-1.webp';\nimport cover2_2 from '@assets/home2/featured/cover2-2.webp';\nimport cover2_3 from '@assets/home2/featured/cover2-3.webp';\nimport cover2_4 from '@assets/home2/featured/cover2-4.webp';\n\nimport avatar3 from '@assets/home2/featured/avatar3.webp';\nimport thumb3_1 from '@assets/home2/featured/thumb3-1.webp';\nimport thumb3_2 from '@assets/home2/featured/thumb3-2.webp';\nimport thumb3_3 from '@assets/home2/featured/thumb3-3.webp';\nimport thumb3_4 from '@assets/home2/featured/thumb3-4.webp';\nimport cover3_1 from '@assets/home2/featured/cover3-1.webp';\nimport cover3_2 from '@assets/home2/featured/cover3-2.webp';\nimport cover3_3 from '@assets/home2/featured/cover3-3.webp';\nimport cover3_4 from '@assets/home2/featured/cover3-4.webp';\n\nimport avatar4 from '@assets/home2/featured/avatar4.webp';\nimport thumb4_1 from '@assets/home2/featured/thumb4-1.webp';\nimport thumb4_2 from '@assets/home2/featured/thumb4-2.webp';\nimport thumb4_3 from '@assets/home2/featured/thumb4-3.webp';\nimport thumb4_4 from '@assets/home2/featured/thumb4-4.webp';\nimport cover4_1 from '@assets/home2/featured/cover4-1.webp';\nimport cover4_2 from '@assets/home2/featured/cover4-2.webp';\nimport cover4_3 from '@assets/home2/featured/cover4-3.webp';\nimport cover4_4 from '@assets/home2/featured/cover4-4.webp';\n\nimport avatar5 from '@assets/home2/featured/avatar5.webp';\nimport thumb5_1 from '@assets/home2/featured/thumb5-1.webp';\nimport thumb5_2 from '@assets/home2/featured/thumb5-2.webp';\nimport thumb5_3 from '@assets/home2/featured/thumb5-3.webp';\nimport thumb5_4 from '@assets/home2/featured/thumb5-4.webp';\nimport cover5_1 from '@assets/home2/featured/cover5-1.webp';\nimport cover5_2 from '@assets/home2/featured/cover5-2.webp';\nimport cover5_3 from '@assets/home2/featured/cover5-3.webp';\nimport cover5_4 from '@assets/home2/featured/cover5-4.webp';\n\nimport avatar6 from '@assets/home2/featured/avatar6.webp';\nimport thumb6_1 from '@assets/home2/featured/thumb6-1.webp';\nimport thumb6_2 from '@assets/home2/featured/thumb6-2.webp';\nimport thumb6_3 from '@assets/home2/featured/thumb6-3.webp';\nimport thumb6_4 from '@assets/home2/featured/thumb6-4.webp';\nimport cover6_1 from '@assets/home2/featured/cover6-1.webp';\nimport cover6_2 from '@assets/home2/featured/cover6-2.webp';\nimport cover6_3 from '@assets/home2/featured/cover6-3.webp';\nimport cover6_4 from '@assets/home2/featured/cover6-4.webp';\n\nconst featured = [\n    {\n        title: '3d vector characters',\n        qty: 30,\n        author: {\n            nickname: 'anizadam',\n            avatar: avatar1,\n        },\n        media: [\n            {\n                thumbnail: thumb1_1,\n                full: cover1_1\n            },\n            {\n                thumbnail: thumb1_2,\n                full: cover1_2\n            },\n            {\n                thumbnail: thumb1_3,\n                full: cover1_3\n            },\n            {\n                thumbnail: thumb1_4,\n                full: cover1_4\n            }\n        ]\n    },\n    {\n        title: 'Figure collection',\n        qty: 26,\n        author: {\n            nickname: 'zzzivitelar',\n            avatar: avatar2,\n        },\n        media: [\n            {\n                thumbnail: thumb2_1,\n                full: cover2_1\n            },\n            {\n                thumbnail: thumb2_2,\n                full: cover2_2\n            },\n            {\n                thumbnail: thumb2_3,\n                full: cover2_3\n            },\n            {\n                thumbnail: thumb2_4,\n                full: cover2_4\n            }\n        ]\n    },\n    {\n        title: 'Creative art collection',\n        qty: 9,\n        author: {\n            nickname: 'xte284934',\n            avatar: avatar3,\n        },\n        media: [\n            {\n                thumbnail: thumb3_1,\n                full: cover3_1\n            },\n            {\n                thumbnail: thumb3_2,\n                full: cover3_2\n            },\n            {\n                thumbnail: thumb3_3,\n                full: cover3_3\n            },\n            {\n                thumbnail: thumb3_4,\n                full: cover3_4\n            }\n        ]\n    },\n    {\n        title: 'The image of a man',\n        qty: 54,\n        author: {\n            nickname: 'floweman',\n            avatar: avatar4,\n        },\n        media: [\n            {\n                thumbnail: thumb4_1,\n                full: cover4_1\n            },\n            {\n                thumbnail: thumb4_2,\n                full: cover4_2\n            },\n            {\n                thumbnail: thumb4_3,\n                full: cover4_3\n            },\n            {\n                thumbnail: thumb4_4,\n                full: cover4_4\n            }\n        ]\n    },\n    {\n        title: 'Solar system',\n        qty: 8,\n        author: {\n            nickname: 'planets',\n            avatar: avatar5,\n        },\n        media: [\n            {\n                thumbnail: thumb5_1,\n                full: cover5_1\n            },\n            {\n                thumbnail: thumb5_2,\n                full: cover5_2\n            },\n            {\n                thumbnail: thumb5_3,\n                full: cover5_3\n            },\n            {\n                thumbnail: thumb5_4,\n                full: cover5_4\n            }\n        ]\n    },\n    {\n        title: 'Colored backgrounds',\n        qty: 38,\n        author: {\n            nickname: 'anizadam',\n            avatar: avatar6,\n        },\n        media: [\n            {\n                thumbnail: thumb6_1,\n                full: cover6_1\n            },\n            {\n                thumbnail: thumb6_2,\n                full: cover6_2\n            },\n            {\n                thumbnail: thumb6_3,\n                full: cover6_3\n            },\n            {\n                thumbnail: thumb6_4,\n                full: cover6_4\n            }\n        ]\n    }\n];\n\nexport default featured","// styling\nimport styles from './style.module.scss';\n\n// components\nimport SectionHeader from '@components/SectionHeader';\nimport LinkWithArrow from '@ui/LinkWithArrow';\nimport CollectionItem from '@components/CollectionItem';\n\n// data placeholder\nimport featured from '@db/featured';\n\nconst FeaturedCollections = () => {\n    return (\n        <section>\n            <div className=\"container\">\n                <SectionHeader title=\"New Collections ⚡\">\n                    <LinkWithArrow href=\"/explore\" text=\"View all collections\"/>\n                </SectionHeader>\n                <div className={styles.grid}>\n                    {\n                        featured.map((item, index) => (\n                            <CollectionItem item={item} index={index} key={index}/>\n                        ))\n                    }\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default FeaturedCollections","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__+wtnM\",\"avatar\":\"style_avatar__UmGcT\"};","// styles\nimport styles from './style.module.scss';\n\n// components\nimport {NavLink} from 'react-router-dom';\nimport LazyImage from '@components/LazyImage';\n\n// utils\nimport {memo} from 'react';\n\n// assets\nimport logo from '@assets/xchain.svg';\n\nconst AuthorTag = ({avatar = logo, name = 'xchain', ...props}) => {\n    return (\n        <div className={`${styles.container} d-flex align-items-center g-10 bg-secondary`} {...props}>\n            <LazyImage className={styles.avatar} src={avatar} alt={name}/>\n            <NavLink to=\"/author\">{name === 'xchain' ? name : `@${name}`}</NavLink>\n        </div>\n    )\n}\n\nexport default memo(AuthorTag);","// components\nimport {NavLink} from 'react-router-dom';\n\n// utils\nimport {memo} from 'react';\nimport PropTypes from 'prop-types';\n\nconst LinkWithArrow = ({href, text}) => {\n    return (\n        <NavLink className=\"link-arrow\" to={href}>\n            {text} <i className=\"icon icon-arrow-right text-accent\"/>\n        </NavLink>\n    )\n}\n\nLinkWithArrow.propTypes = {\n    href: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired\n}\n\nexport default memo(LinkWithArrow);","import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element>();\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n"],"names":["_ref","item","index","isPrivate","thumbsSwiper","setThumbsSwiper","useState","_jsx","Spring","children","_jsxs","className","concat","styles","title","addZero","qty","AuthorTag","avatar","author","name","nickname","style","pointerEvents","Swiper","modules","EffectFade","Thumbs","Autoplay","effect","fadeEffect","crossFade","loop","speed","thumbs","swiper","destroyed","autoplay","delay","media","map","SwiperSlide","src","full","alt","onSwiper","spaceBetween","slidesPerView","breakpoints","thumbnail","props","LazyLoadImage","wrapperClassName","type","ref","inView","useInView","threshold","triggerOnce","common","config","duration","mass","tension","friction","spring","slide","useSpring","from","transform","opacity","to","fade","grow","animated","div","avatar1","thumb1_1","cover1_1","thumb1_2","cover1_2","thumb1_3","cover1_3","thumb1_4","cover1_4","avatar2","thumb2_1","cover2_1","thumb2_2","cover2_2","thumb2_3","cover2_3","thumb2_4","cover2_4","avatar3","thumb3_1","cover3_1","thumb3_2","cover3_2","thumb3_3","cover3_3","thumb3_4","cover3_4","avatar4","thumb4_1","cover4_1","thumb4_2","cover4_2","thumb4_3","cover4_3","thumb4_4","cover4_4","avatar5","thumb5_1","cover5_1","thumb5_2","cover5_2","thumb5_3","cover5_3","thumb5_4","cover5_4","avatar6","thumb6_1","thumb6_2","thumb6_3","thumb6_4","FeaturedCollections","SectionHeader","LinkWithArrow","href","text","featured","CollectionItem","logo","LazyImage","NavLink","memo","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","key","root","has","set","toString","get","observe","element","callback","arguments","length","undefined","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","time","boundingClientRect","intersectionRect","rootBounds","id","observer","elements","instance","thresholds","entries","forEach","entry","_a","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","React","rootMargin","skip","initialInView","onChange","setRef","React2","state","setState","current","entryTarget","previousEntryTarget","result"],"sourceRoot":""}