{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridDensityHeaderHeightSelector } from '../hooks/features/density/densitySelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', \"scrollArea--\".concat(scrollDirection)]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [\"&.\".concat(gridClasses['scrollArea--left'])]: styles['scrollArea--left']\n  }, {\n    [\"&.\".concat(gridClasses['scrollArea--right'])]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [\"&.\".concat(gridClasses['scrollArea--left'])]: {\n    left: 0\n  },\n  [\"&.\".concat(gridClasses['scrollArea--right'])]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = React.useRef();\n  const [dragging, setDragging] = React.useState(false);\n  const height = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleScrolling = React.useCallback(newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n  }, []);\n  const handleDragOver = React.useCallback(event => {\n    let offset;\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n    clearTimeout(timeout.current); // Avoid freeze and inertia.\n\n    timeout.current = setTimeout(() => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  }, [scrollDirection, apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeout.current);\n    };\n  }, []);\n  const toggleDragging = React.useCallback(() => {\n    setDragging(prevDragging => !prevDragging);\n  }, []);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', toggleDragging);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', toggleDragging);\n  return dragging ? /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: {\n      height\n    }\n  }) : null;\n}\nprocess.env.NODE_ENV !== \"production\" ? GridScrollAreaRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  scrollDirection: PropTypes.oneOf(['left', 'right']).isRequired\n} : void 0;\nconst GridScrollArea = /*#__PURE__*/React.memo(GridScrollAreaRaw);\nexport { GridScrollArea };","map":{"version":3,"names":["_extends","React","PropTypes","clsx","unstable_composeClasses","composeClasses","styled","useGridApiEventHandler","useGridApiContext","getDataGridUtilityClass","gridClasses","useGridRootProps","gridDensityHeaderHeightSelector","useGridSelector","jsx","_jsx","CLIFF","SLOP","useUtilityClasses","ownerState","scrollDirection","classes","slots","root","concat","GridScrollAreaRawRoot","name","slot","overridesResolver","props","styles","scrollArea","position","top","zIndex","width","bottom","left","right","GridScrollAreaRaw","rootRef","useRef","apiRef","timeout","dragging","setDragging","useState","height","scrollPosition","rootProps","handleScrolling","useCallback","newScrollPosition","current","handleDragOver","event","offset","clientX","getBoundingClientRect","Math","max","Error","clearTimeout","setTimeout","scroll","useEffect","toggleDragging","prevDragging","ref","className","onDragOver","style","process","env","NODE_ENV","propTypes","oneOf","isRequired","GridScrollArea","memo"],"sources":["D:/react-project/ChainblockTicket2/Template/node_modules/@mui/x-data-grid/components/GridScrollArea.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridDensityHeaderHeightSelector } from '../hooks/features/density/densitySelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\n\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = React.useRef();\n  const [dragging, setDragging] = React.useState(false);\n  const height = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleScrolling = React.useCallback(newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n  }, []);\n  const handleDragOver = React.useCallback(event => {\n    let offset;\n\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI: Wrong drag direction');\n    }\n\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n    clearTimeout(timeout.current); // Avoid freeze and inertia.\n\n    timeout.current = setTimeout(() => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  }, [scrollDirection, apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeout.current);\n    };\n  }, []);\n  const toggleDragging = React.useCallback(() => {\n    setDragging(prevDragging => !prevDragging);\n  }, []);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', toggleDragging);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', toggleDragging);\n  return dragging ? /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: {\n      height\n    }\n  }) : null;\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridScrollAreaRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  scrollDirection: PropTypes.oneOf(['left', 'right']).isRequired\n} : void 0;\nconst GridScrollArea = /*#__PURE__*/React.memo(GridScrollAreaRaw);\nexport { GridScrollArea };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}