{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\Ticketchain\\\\ticket\\\\Template\\\\src\\\\components\\\\CollapsedText.jsx\",\n  _s = $RefreshSig$();\n// components\nimport Truncate from 'react-truncate';\n\n// hooks\nimport { useState, useEffect } from 'react';\n\n// utils\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollapsedText = ({\n  text,\n  lines = 2,\n  className,\n  withButton = false,\n  width\n}) => {\n  _s();\n  const [truncated, setTruncated] = useState(false);\n  const [expanded, setExpanded] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  const handleExpand = e => {\n    e.preventDefault();\n    setExpanded(true);\n  };\n  useEffect(() => {\n    setMounted(true);\n    return () => setMounted(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: className ? className : '',\n    children: mounted && /*#__PURE__*/_jsxDEV(Truncate, {\n      lines: !expanded && lines,\n      ellipsis: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"... \", withButton && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-divider\",\n          onClick: handleExpand,\n          children: \"Read more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 28\n      }, this),\n      onTruncate: () => setTruncated(!truncated),\n      width: width,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 20\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(CollapsedText, \"X2VnEPhrYsNmIzYRhynvf4BLG2A=\");\n_c = CollapsedText;\nCollapsedText.propTypes = {\n  text: PropTypes.string.isRequired,\n  lines: PropTypes.number,\n  className: PropTypes.string,\n  withButton: PropTypes.bool,\n  width: PropTypes.number.isRequired\n};\nexport default CollapsedText;\nvar _c;\n$RefreshReg$(_c, \"CollapsedText\");","map":{"version":3,"names":["Truncate","useState","useEffect","PropTypes","jsxDEV","_jsxDEV","CollapsedText","text","lines","className","withButton","width","_s","truncated","setTruncated","expanded","setExpanded","mounted","setMounted","handleExpand","e","preventDefault","children","ellipsis","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onTruncate","_c","propTypes","string","isRequired","number","bool","$RefreshReg$"],"sources":["C:/Users/Public/Ticketchain/ticket/Template/src/components/CollapsedText.jsx"],"sourcesContent":["// components\nimport Truncate from 'react-truncate';\n\n// hooks\nimport {useState, useEffect} from 'react';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst CollapsedText = ({text, lines = 2, className, withButton = false, width}) => {\n    const [truncated, setTruncated] = useState(false);\n    const [expanded, setExpanded] = useState(false);\n    const [mounted, setMounted] = useState(false);\n\n    const handleExpand = e => {\n        e.preventDefault();\n        setExpanded(true);\n    }\n\n    useEffect(() => {\n        setMounted(true);\n\n        return () => setMounted(false);\n    }, []);\n\n    return (\n        <span className={className ? className : ''}>\n           {\n               mounted && (\n                   <Truncate\n                       lines={!expanded && lines}\n                       ellipsis={(\n                           <span>... {\n                               withButton &&\n                               <button className=\"text-divider\" onClick={handleExpand}>Read more</button>}\n                    </span>\n                       )}\n                       onTruncate={() => setTruncated(!truncated)}\n                       width={width}\n                   >\n                       {text}\n                   </Truncate>\n               )\n           }\n        </span>\n    )\n}\n\nCollapsedText.propTypes = {\n    text: PropTypes.string.isRequired,\n    lines: PropTypes.number,\n    className: PropTypes.string,\n    withButton: PropTypes.bool,\n    width: PropTypes.number.isRequired\n}\n\nexport default CollapsedText"],"mappings":";;AAAA;AACA,OAAOA,QAAQ,MAAM,gBAAgB;;AAErC;AACA,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;;AAEzC;AACA,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,aAAa,GAAGA,CAAC;EAACC,IAAI;EAAEC,KAAK,GAAG,CAAC;EAAEC,SAAS;EAAEC,UAAU,GAAG,KAAK;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMkB,YAAY,GAAGC,CAAC,IAAI;IACtBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACZgB,UAAU,CAAC,IAAI,CAAC;IAEhB,OAAO,MAAMA,UAAU,CAAC,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIb,OAAA;IAAMI,SAAS,EAAEA,SAAS,GAAGA,SAAS,GAAG,EAAG;IAAAa,QAAA,EAErCL,OAAO,iBACHZ,OAAA,CAACL,QAAQ;MACLQ,KAAK,EAAE,CAACO,QAAQ,IAAIP,KAAM;MAC1Be,QAAQ,eACJlB,OAAA;QAAAiB,QAAA,GAAM,MAAI,EACNZ,UAAU,iBACVL,OAAA;UAAQI,SAAS,EAAC,cAAc;UAACe,OAAO,EAAEL,YAAa;UAAAG,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E,CACD;MACFC,UAAU,EAAEA,CAAA,KAAMf,YAAY,CAAC,CAACD,SAAS,CAAE;MAC3CF,KAAK,EAAEA,KAAM;MAAAW,QAAA,EAEZf;IAAI;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EACb;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEf,CAAC;AAAAhB,EAAA,CArCKN,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAuCnBA,aAAa,CAACyB,SAAS,GAAG;EACtBxB,IAAI,EAAEJ,SAAS,CAAC6B,MAAM,CAACC,UAAU;EACjCzB,KAAK,EAAEL,SAAS,CAAC+B,MAAM;EACvBzB,SAAS,EAAEN,SAAS,CAAC6B,MAAM;EAC3BtB,UAAU,EAAEP,SAAS,CAACgC,IAAI;EAC1BxB,KAAK,EAAER,SAAS,CAAC+B,MAAM,CAACD;AAC5B,CAAC;AAED,eAAe3B,aAAa;AAAA,IAAAwB,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}