{"version":3,"file":"static/js/2532.1c579782.chunk.js","mappings":"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","sources":["components/CollapsedText.jsx","webpack://xchain/./src/layout/post/Navigation/style.module.scss?e90f","layout/post/Navigation/index.jsx","../node_modules/debounce/index.js","../node_modules/react-truncate/lib/Truncate.js","../node_modules/react-use-measure/dist/web.js"],"sourcesContent":["// components\nimport Truncate from 'react-truncate';\n\n// hooks\nimport {useState, useEffect} from 'react';\n\n// utils\nimport PropTypes from 'prop-types';\n\nconst CollapsedText = ({text, lines = 2, className, withButton = false, width}) => {\n    const [truncated, setTruncated] = useState(false);\n    const [expanded, setExpanded] = useState(false);\n    const [mounted, setMounted] = useState(false);\n\n    const handleExpand = e => {\n        e.preventDefault();\n        setExpanded(true);\n    }\n\n    useEffect(() => {\n        setMounted(true);\n\n        return () => setMounted(false);\n    }, []);\n\n    return (\n        <span className={className ? className : ''}>\n           {\n               mounted && (\n                   <Truncate\n                       lines={!expanded && lines}\n                       ellipsis={(\n                           <span>... {\n                               withButton &&\n                               <button className=\"text-divider\" onClick={handleExpand}>Read more</button>}\n                    </span>\n                       )}\n                       onTruncate={() => setTruncated(!truncated)}\n                       width={width}\n                   >\n                       {text}\n                   </Truncate>\n               )\n           }\n        </span>\n    )\n}\n\nCollapsedText.propTypes = {\n    text: PropTypes.string.isRequired,\n    lines: PropTypes.number,\n    className: PropTypes.string,\n    withButton: PropTypes.bool,\n    width: PropTypes.number.isRequired\n}\n\nexport default CollapsedText","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__Aoriz\",\"divider\":\"style_divider__ZZR+X\",\"title\":\"style_title__178r2\",\"next\":\"style_next__iXu7c\",\"prev\":\"style_prev__9VN0E\",\"navigator\":\"style_navigator__iH6KA\",\"block\":\"style_block__Y2Kvg\"};","// styling\nimport styles from './style.module.scss';\n\n// components\nimport CollapsedText from '@components/CollapsedText';\n\n// hooks\nimport useMeasure from 'react-use-measure';\n\nconst Navigation = () => {\n    const [ref, {width}] = useMeasure();\n\n    return (\n        <div className={`${styles.container} post-section`}>\n            <div className={styles.block}>\n                <button className={`${styles.navigator} ${styles.prev} navigator navigator--prev`}\n                        aria-label=\"Previous post\">\n                    <i className=\"icon icon-angle-left\" />\n                </button>\n                <button className={`${styles.title} ${styles.prev} h5`} ref={ref}>\n                    <CollapsedText maxLine={2} text=\"The rise of the non fungible token internet having trouble\"\n                                   width={width} />\n                </button>\n            </div>\n            <span className={styles.divider}/>\n            <div className={styles.block}>\n                <button className={`${styles.title} ${styles.next} h5`}>\n                    <CollapsedText maxLine={2} text=\"Guide to creating & selling digital art NFTs\"\n                                   width={width} />\n                </button>\n                <button className={`${styles.navigator} ${styles.next} navigator navigator--next`}\n                        aria-label=\"Next post\">\n                    <i className=\"icon icon-angle-right\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Navigation","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n    _inherits(Truncate, _Component);\n\n    function Truncate() {\n        var _ref;\n\n        _classCallCheck(this, Truncate);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n        _this.state = {};\n        _this.styles = {\n            ellipsis: {\n                position: 'fixed',\n                visibility: 'hidden',\n                top: 0,\n                left: 0\n            }\n        };\n\n\n        _this.elements = {};\n\n        _this.onResize = _this.onResize.bind(_this);\n        _this.onTruncate = _this.onTruncate.bind(_this);\n        _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n        _this.measureWidth = _this.measureWidth.bind(_this);\n        _this.getLines = _this.getLines.bind(_this);\n        _this.renderLine = _this.renderLine.bind(_this);\n        return _this;\n    }\n\n    _createClass(Truncate, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var text = this.elements.text,\n                calcTargetWidth = this.calcTargetWidth,\n                onResize = this.onResize;\n\n\n            var canvas = document.createElement('canvas');\n            this.canvasContext = canvas.getContext('2d');\n\n            calcTargetWidth(function () {\n                // Node not needed in document tree to read its content\n                if (text) {\n                    text.parentNode.removeChild(text);\n                }\n            });\n\n            window.addEventListener('resize', onResize);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            // Render was based on outdated refs and needs to be rerun\n            if (this.props.children !== prevProps.children) {\n                this.forceUpdate();\n            }\n\n            // If the width prop has changed, recalculate size of contents\n            if (this.props.width !== prevProps.width) {\n                this.calcTargetWidth();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var ellipsis = this.elements.ellipsis,\n                onResize = this.onResize,\n                timeout = this.timeout;\n\n\n            ellipsis.parentNode.removeChild(ellipsis);\n\n            window.removeEventListener('resize', onResize);\n\n            window.cancelAnimationFrame(timeout);\n        }\n\n        // Shim innerText to consistently break lines at <br/> but not at \\n\n\n    }, {\n        key: 'innerText',\n        value: function innerText(node) {\n            var div = document.createElement('div');\n            var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n\n            div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n\n            var text = div[contentKey];\n\n            var test = document.createElement('div');\n            test.innerHTML = 'foo<br/>bar';\n\n            if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n                div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n                text = div[contentKey];\n            }\n\n            return text;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.calcTargetWidth();\n        }\n    }, {\n        key: 'onTruncate',\n        value: function onTruncate(didTruncate) {\n            var onTruncate = this.props.onTruncate;\n\n\n            if (typeof onTruncate === 'function') {\n                this.timeout = window.requestAnimationFrame(function () {\n                    onTruncate(didTruncate);\n                });\n            }\n        }\n    }, {\n        key: 'calcTargetWidth',\n        value: function calcTargetWidth(callback) {\n            var target = this.elements.target,\n                calcTargetWidth = this.calcTargetWidth,\n                canvasContext = this.canvasContext,\n                width = this.props.width;\n\n            // Calculation is no longer relevant, since node has been removed\n\n            if (!target) {\n                return;\n            }\n\n            var targetWidth = width ||\n            // Floor the result to deal with browser subpixel precision\n            Math.floor(target.parentNode.getBoundingClientRect().width);\n\n            // Delay calculation until parent node is inserted to the document\n            // Mounting order in React is ChildComponent, ParentComponent\n            if (!targetWidth) {\n                return window.requestAnimationFrame(function () {\n                    return calcTargetWidth(callback);\n                });\n            }\n\n            var style = window.getComputedStyle(target);\n\n            var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n\n            canvasContext.font = font;\n\n            this.setState({\n                targetWidth: targetWidth\n            }, callback);\n        }\n    }, {\n        key: 'measureWidth',\n        value: function measureWidth(text) {\n            return this.canvasContext.measureText(text).width;\n        }\n    }, {\n        key: 'ellipsisWidth',\n        value: function ellipsisWidth(node) {\n            return node.offsetWidth;\n        }\n    }, {\n        key: 'trimRight',\n        value: function trimRight(text) {\n            return text.replace(/\\s+$/, '');\n        }\n    }, {\n        key: 'getLines',\n        value: function getLines() {\n            var elements = this.elements,\n                _props = this.props,\n                numLines = _props.lines,\n                ellipsis = _props.ellipsis,\n                trimWhitespace = _props.trimWhitespace,\n                targetWidth = this.state.targetWidth,\n                innerText = this.innerText,\n                measureWidth = this.measureWidth,\n                onTruncate = this.onTruncate,\n                trimRight = this.trimRight;\n\n\n            var lines = [];\n            var text = innerText(elements.text);\n            var textLines = text.split('\\n').map(function (line) {\n                return line.split(' ');\n            });\n            var didTruncate = true;\n            var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n            for (var line = 1; line <= numLines; line++) {\n                var textWords = textLines[0];\n\n                // Handle newline\n                if (textWords.length === 0) {\n                    lines.push();\n                    textLines.shift();\n                    line--;\n                    continue;\n                }\n\n                var resultLine = textWords.join(' ');\n\n                if (measureWidth(resultLine) <= targetWidth) {\n                    if (textLines.length === 1) {\n                        // Line is end of text and fits without truncating\n                        didTruncate = false;\n\n                        lines.push(resultLine);\n                        break;\n                    }\n                }\n\n                if (line === numLines) {\n                    // Binary search determining the longest possible line inluding truncate string\n                    var textRest = textWords.join(' ');\n\n                    var lower = 0;\n                    var upper = textRest.length - 1;\n\n                    while (lower <= upper) {\n                        var middle = Math.floor((lower + upper) / 2);\n\n                        var testLine = textRest.slice(0, middle + 1);\n\n                        if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n                            lower = middle + 1;\n                        } else {\n                            upper = middle - 1;\n                        }\n                    }\n\n                    var lastLineText = textRest.slice(0, lower);\n\n                    if (trimWhitespace) {\n                        lastLineText = trimRight(lastLineText);\n\n                        // Remove blank lines from the end of text\n                        while (!lastLineText.length && lines.length) {\n                            var prevLine = lines.pop();\n\n                            lastLineText = trimRight(prevLine);\n                        }\n                    }\n\n                    resultLine = React.createElement(\n                        'span',\n                        null,\n                        lastLineText,\n                        ellipsis\n                    );\n                } else {\n                    // Binary search determining when the line breaks\n                    var _lower = 0;\n                    var _upper = textWords.length - 1;\n\n                    while (_lower <= _upper) {\n                        var _middle = Math.floor((_lower + _upper) / 2);\n\n                        var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n                        if (measureWidth(_testLine) <= targetWidth) {\n                            _lower = _middle + 1;\n                        } else {\n                            _upper = _middle - 1;\n                        }\n                    }\n\n                    // The first word of this line is too long to fit it\n                    if (_lower === 0) {\n                        // Jump to processing of last line\n                        line = numLines - 1;\n                        continue;\n                    }\n\n                    resultLine = textWords.slice(0, _lower).join(' ');\n                    textLines[0].splice(0, _lower);\n                }\n\n                lines.push(resultLine);\n            }\n\n            onTruncate(didTruncate);\n\n            return lines;\n        }\n    }, {\n        key: 'renderLine',\n        value: function renderLine(line, i, arr) {\n            if (i === arr.length - 1) {\n                return React.createElement(\n                    'span',\n                    { key: i },\n                    line\n                );\n            } else {\n                var br = React.createElement('br', { key: i + 'br' });\n\n                if (line) {\n                    return [React.createElement(\n                        'span',\n                        { key: i },\n                        line\n                    ), br];\n                } else {\n                    return br;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var target = this.elements.target,\n                _props2 = this.props,\n                children = _props2.children,\n                ellipsis = _props2.ellipsis,\n                lines = _props2.lines,\n                spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n                targetWidth = this.state.targetWidth,\n                getLines = this.getLines,\n                renderLine = this.renderLine,\n                onTruncate = this.onTruncate;\n\n            var text = void 0;\n\n            var mounted = !!(target && targetWidth);\n\n            if (typeof window !== 'undefined' && mounted) {\n                if (lines > 0) {\n                    text = getLines().map(renderLine);\n                } else {\n                    text = children;\n\n                    onTruncate(false);\n                }\n            }\n\n            delete spanProps.onTruncate;\n            delete spanProps.trimWhitespace;\n\n            return React.createElement(\n                'span',\n                _extends({}, spanProps, { ref: function ref(targetEl) {\n                        _this2.elements.target = targetEl;\n                    } }),\n                React.createElement(\n                    'span',\n                    null,\n                    text\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(textEl) {\n                            _this2.elements.text = textEl;\n                        } },\n                    children\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(ellipsisEl) {\n                            _this2.elements.ellipsis = ellipsisEl;\n                        }, style: this.styles.ellipsis },\n                    ellipsis\n                )\n            );\n        }\n    }]);\n\n    return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n    children: PropTypes.node,\n    ellipsis: PropTypes.node,\n    lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n    trimWhitespace: PropTypes.bool,\n    width: PropTypes.number,\n    onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n    children: '',\n    ellipsis: '…',\n    lines: 1,\n    trimWhitespace: false,\n    width: 0\n};\nexport default Truncate;\n;\n","import { useState, useRef, useEffect, useMemo } from 'react';\nimport createDebounce from 'debounce';\n\nfunction useMeasure(_temp) {\n  let {\n    debounce,\n    scroll,\n    polyfill,\n    offsetSize\n  } = _temp === void 0 ? {\n    debounce: 0,\n    scroll: false,\n    offsetSize: false\n  } : _temp;\n  const ResizeObserver = polyfill || (typeof window === 'undefined' ? class ResizeObserver {} : window.ResizeObserver);\n\n  if (!ResizeObserver) {\n    throw new Error('This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills');\n  }\n\n  const [bounds, set] = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n    bottom: 0,\n    right: 0,\n    x: 0,\n    y: 0\n  }); // keep all state in a ref\n\n  const state = useRef({\n    element: null,\n    scrollContainers: null,\n    resizeObserver: null,\n    lastBounds: bounds\n  }); // set actual debounce values early, so effects know if they should react accordingly\n\n  const scrollDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.scroll : null;\n  const resizeDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.resize : null; // make sure to update state only as long as the component is truly mounted\n\n  const mounted = useRef(false);\n  useEffect(() => {\n    mounted.current = true;\n    return () => void (mounted.current = false);\n  }); // memoize handlers, so event-listeners know when they should update\n\n  const [forceRefresh, resizeChange, scrollChange] = useMemo(() => {\n    const callback = () => {\n      if (!state.current.element) return;\n      const {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      } = state.current.element.getBoundingClientRect();\n      const size = {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      };\n\n      if (state.current.element instanceof HTMLElement && offsetSize) {\n        size.height = state.current.element.offsetHeight;\n        size.width = state.current.element.offsetWidth;\n      }\n\n      Object.freeze(size);\n      if (mounted.current && !areBoundsEqual(state.current.lastBounds, size)) set(state.current.lastBounds = size);\n    };\n\n    return [callback, resizeDebounce ? createDebounce(callback, resizeDebounce) : callback, scrollDebounce ? createDebounce(callback, scrollDebounce) : callback];\n  }, [set, offsetSize, scrollDebounce, resizeDebounce]); // cleanup current scroll-listeners / observers\n\n  function removeListeners() {\n    if (state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(element => element.removeEventListener('scroll', scrollChange, true));\n      state.current.scrollContainers = null;\n    }\n\n    if (state.current.resizeObserver) {\n      state.current.resizeObserver.disconnect();\n      state.current.resizeObserver = null;\n    }\n  } // add scroll-listeners / observers\n\n\n  function addListeners() {\n    if (!state.current.element) return;\n    state.current.resizeObserver = new ResizeObserver(scrollChange);\n    state.current.resizeObserver.observe(state.current.element);\n\n    if (scroll && state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(scrollContainer => scrollContainer.addEventListener('scroll', scrollChange, {\n        capture: true,\n        passive: true\n      }));\n    }\n  } // the ref we expose to the user\n\n\n  const ref = node => {\n    if (!node || node === state.current.element) return;\n    removeListeners();\n    state.current.element = node;\n    state.current.scrollContainers = findScrollContainers(node);\n    addListeners();\n  }; // add general event listeners\n\n\n  useOnWindowScroll(scrollChange, Boolean(scroll));\n  useOnWindowResize(resizeChange); // respond to changes that are relevant for the listeners\n\n  useEffect(() => {\n    removeListeners();\n    addListeners();\n  }, [scroll, scrollChange, resizeChange]); // remove all listeners when the components unmounts\n\n  useEffect(() => removeListeners, []);\n  return [ref, bounds, forceRefresh];\n} // Adds native resize listener to window\n\n\nfunction useOnWindowResize(onWindowResize) {\n  useEffect(() => {\n    const cb = onWindowResize;\n    window.addEventListener('resize', cb);\n    return () => void window.removeEventListener('resize', cb);\n  }, [onWindowResize]);\n}\n\nfunction useOnWindowScroll(onScroll, enabled) {\n  useEffect(() => {\n    if (enabled) {\n      const cb = onScroll;\n      window.addEventListener('scroll', cb, {\n        capture: true,\n        passive: true\n      });\n      return () => void window.removeEventListener('scroll', cb, true);\n    }\n  }, [onScroll, enabled]);\n} // Returns a list of scroll offsets\n\n\nfunction findScrollContainers(element) {\n  const result = [];\n  if (!element || element === document.body) return result;\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = window.getComputedStyle(element);\n  if ([overflow, overflowX, overflowY].some(prop => prop === 'auto' || prop === 'scroll')) result.push(element);\n  return [...result, ...findScrollContainers(element.parentElement)];\n} // Checks if element boundaries are equal\n\n\nconst keys = ['x', 'y', 'top', 'bottom', 'left', 'right', 'width', 'height'];\n\nconst areBoundsEqual = (a, b) => keys.every(key => a[key] === b[key]);\n\nexport { useMeasure as default };\n"],"names":["_ref","text","lines","className","withButton","width","truncated","setTruncated","useState","expanded","setExpanded","mounted","setMounted","useEffect","_jsx","children","Truncate","ellipsis","_jsxs","onClick","e","preventDefault","onTruncate","Navigation","ref","useMeasure","concat","styles","CollapsedText","maxLine","debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","this","arguments","callNow","clear","clearTimeout","flush","module","exports","_extends","Object","assign","target","i","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_Component","instance","TypeError","_classCallCheck","_len","Array","_key","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","state","position","visibility","top","left","elements","onResize","bind","calcTargetWidth","measureWidth","getLines","renderLine","subClass","superClass","create","constructor","value","setPrototypeOf","_inherits","canvas","document","createElement","canvasContext","getContext","parentNode","removeChild","window","addEventListener","prevProps","forceUpdate","removeEventListener","cancelAnimationFrame","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","Math","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","offsetWidth","_props","numLines","trimWhitespace","innerText","trimRight","textLines","split","map","line","ellipsisWidth","textWords","resultLine","push","textRest","lower","upper","middle","slice","lastLineText","pop","React","_lower","_upper","_middle","splice","shift","arr","br","_this2","_props2","spanProps","obj","keys","indexOf","_objectWithoutProperties","targetEl","textEl","ellipsisEl","Component","propTypes","PropTypes","defaultProps","_temp","scroll","polyfill","offsetSize","ResizeObserver","Error","bounds","set","height","bottom","right","x","y","useRef","element","scrollContainers","resizeObserver","lastBounds","scrollDebounce","resizeDebounce","resize","current","forceRefresh","resizeChange","scrollChange","useMemo","size","offsetHeight","freeze","areBoundsEqual","createDebounce","removeListeners","forEach","disconnect","addListeners","observe","scrollContainer","capture","passive","onScroll","enabled","onWindowResize","Boolean","cb","findScrollContainers","body","overflow","overflowX","overflowY","some","prop","parentElement","a","b","every"],"sourceRoot":""}