{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nconst usePagination = (data, itemsPerPage = 10) => {\n  _s();\n  const [isFirstRender, setIsFirstRender] = useState(true);\n  const [currentPage, setCurrentPage] = useState(0);\n  const maxPage = Math.ceil(data.length / itemsPerPage);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    if (isFirstRender) {\n      setIsFirstRender(false);\n      return;\n    }\n    containerRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage]);\n  const currentItems = () => {\n    const begin = currentPage * itemsPerPage;\n    const end = begin + itemsPerPage;\n    return data.slice(begin, end);\n  };\n  useEffect(() => {\n    if (currentPage > maxPage - 1) {\n      setCurrentPage(maxPage - 1);\n    } else if (currentPage < 0 && maxPage > 0) {\n      setCurrentPage(0);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentItems()]);\n  const next = () => {\n    setCurrentPage(currentPage => Math.min(currentPage + 1, maxPage));\n  };\n  const prev = () => {\n    setCurrentPage(currentPage => Math.max(currentPage - 1, 0));\n  };\n  const goToPage = page => {\n    const pageNumber = Math.max(0, page);\n    setCurrentPage(() => Math.min(pageNumber, maxPage));\n  };\n  const showingOf = () => {\n    const begin = currentPage * itemsPerPage;\n    const end = data.length > itemsPerPage ? begin + itemsPerPage : data.length;\n    return data.length > 0 ? `Showing ${begin + 1}-${end} of ${data.length} results` : '';\n  };\n  return {\n    next,\n    prev,\n    goToPage,\n    showingOf,\n    currentItems,\n    currentPage,\n    maxPage,\n    containerRef\n  };\n};\n_s(usePagination, \"RYxGCBSEAUXldqq9SIRjC8SXfmc=\");\nexport default usePagination;","map":{"version":3,"names":["useState","useRef","useEffect","usePagination","data","itemsPerPage","_s","isFirstRender","setIsFirstRender","currentPage","setCurrentPage","maxPage","Math","ceil","length","containerRef","current","scrollIntoView","behavior","currentItems","begin","end","slice","next","min","prev","max","goToPage","page","pageNumber","showingOf"],"sources":["D:/react-project/ChainblockTicket2/Template/src/hooks/usePagination.js"],"sourcesContent":["import {useState, useRef, useEffect} from 'react';\n\nconst usePagination = (data, itemsPerPage = 10) => {\n    const [isFirstRender, setIsFirstRender] = useState(true);\n    const [currentPage, setCurrentPage] = useState(0);\n    const maxPage = Math.ceil(data.length / itemsPerPage);\n    const containerRef = useRef(null);\n\n    useEffect(() => {\n        if (isFirstRender) {\n            setIsFirstRender(false);\n            return;\n        }\n        containerRef.current.scrollIntoView({behavior: 'smooth'});\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentPage]);\n\n    const currentItems = () => {\n        const begin = (currentPage) * itemsPerPage;\n        const end = begin + itemsPerPage;\n        return data.slice(begin, end);\n    };\n\n    useEffect(() => {\n        if (currentPage > maxPage - 1) {\n            setCurrentPage(maxPage - 1);\n        } else if (currentPage < 0 && maxPage > 0) {\n            setCurrentPage(0);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentItems()]);\n\n    const next = () => {\n        setCurrentPage((currentPage) => Math.min(currentPage + 1, maxPage));\n    };\n\n    const prev = () => {\n        setCurrentPage((currentPage) => Math.max(currentPage - 1, 0));\n    };\n\n    const goToPage = (page) => {\n        const pageNumber = Math.max(0, page);\n        setCurrentPage(() => Math.min(pageNumber, maxPage));\n    }\n\n    const showingOf = () => {\n        const begin = (currentPage) * itemsPerPage;\n        const end = data.length > itemsPerPage ? begin + itemsPerPage : data.length;\n        return data.length > 0 ? `Showing ${begin + 1}-${end} of ${data.length} results` : '';\n    }\n\n    return { next, prev, goToPage, showingOf, currentItems, currentPage, maxPage, containerRef };\n}\n\nexport default usePagination"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AAEjD,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,YAAY,GAAG,EAAE,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMW,OAAO,GAAGC,IAAI,CAACC,IAAI,CAACT,IAAI,CAACU,MAAM,GAAGT,YAAY,CAAC;EACrD,MAAMU,YAAY,GAAGd,MAAM,CAAC,IAAI,CAAC;EAEjCC,SAAS,CAAC,MAAM;IACZ,IAAIK,aAAa,EAAE;MACfC,gBAAgB,CAAC,KAAK,CAAC;MACvB;IACJ;IACAO,YAAY,CAACC,OAAO,CAACC,cAAc,CAAC;MAACC,QAAQ,EAAE;IAAQ,CAAC,CAAC;IACzD;EACJ,CAAC,EAAE,CAACT,WAAW,CAAC,CAAC;EAEjB,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,KAAK,GAAIX,WAAW,GAAIJ,YAAY;IAC1C,MAAMgB,GAAG,GAAGD,KAAK,GAAGf,YAAY;IAChC,OAAOD,IAAI,CAACkB,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;EACjC,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACZ,IAAIO,WAAW,GAAGE,OAAO,GAAG,CAAC,EAAE;MAC3BD,cAAc,CAACC,OAAO,GAAG,CAAC,CAAC;IAC/B,CAAC,MAAM,IAAIF,WAAW,GAAG,CAAC,IAAIE,OAAO,GAAG,CAAC,EAAE;MACvCD,cAAc,CAAC,CAAC,CAAC;IACrB;IACA;EACJ,CAAC,EAAE,CAACS,YAAY,CAAC,CAAC,CAAC,CAAC;EAEpB,MAAMI,IAAI,GAAGA,CAAA,KAAM;IACfb,cAAc,CAAED,WAAW,IAAKG,IAAI,CAACY,GAAG,CAACf,WAAW,GAAG,CAAC,EAAEE,OAAO,CAAC,CAAC;EACvE,CAAC;EAED,MAAMc,IAAI,GAAGA,CAAA,KAAM;IACff,cAAc,CAAED,WAAW,IAAKG,IAAI,CAACc,GAAG,CAACjB,WAAW,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EACjE,CAAC;EAED,MAAMkB,QAAQ,GAAIC,IAAI,IAAK;IACvB,MAAMC,UAAU,GAAGjB,IAAI,CAACc,GAAG,CAAC,CAAC,EAAEE,IAAI,CAAC;IACpClB,cAAc,CAAC,MAAME,IAAI,CAACY,GAAG,CAACK,UAAU,EAAElB,OAAO,CAAC,CAAC;EACvD,CAAC;EAED,MAAMmB,SAAS,GAAGA,CAAA,KAAM;IACpB,MAAMV,KAAK,GAAIX,WAAW,GAAIJ,YAAY;IAC1C,MAAMgB,GAAG,GAAGjB,IAAI,CAACU,MAAM,GAAGT,YAAY,GAAGe,KAAK,GAAGf,YAAY,GAAGD,IAAI,CAACU,MAAM;IAC3E,OAAOV,IAAI,CAACU,MAAM,GAAG,CAAC,GAAI,WAAUM,KAAK,GAAG,CAAE,IAAGC,GAAI,OAAMjB,IAAI,CAACU,MAAO,UAAS,GAAG,EAAE;EACzF,CAAC;EAED,OAAO;IAAES,IAAI;IAAEE,IAAI;IAAEE,QAAQ;IAAEG,SAAS;IAAEX,YAAY;IAAEV,WAAW;IAAEE,OAAO;IAAEI;EAAa,CAAC;AAChG,CAAC;AAAAT,EAAA,CAlDKH,aAAa;AAoDnB,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}