{"ast":null,"code":"export const amET = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'መንገድ አሳይ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          }\n          // if (type === 'previous') {\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        },\n        labelRowsPerPage: 'ረድፎች በአንድ ገጽ:',\n        labelDisplayedRows: _ref => {\n          let {\n            from,\n            to,\n            count\n          } = _ref;\n          return \"\".concat(from, \"-\").concat(to, \" \\u12A8 \").concat(count !== -1 ? count : \"\".concat(to, \" \\u1260\\u120B\\u12ED\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\u12AE\\u12A8\").concat(value !== 1 ? 'ቦች' : 'ብ'),\n        emptyLabelText: 'ባዶ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'አጽዳ',\n        closeText: 'ዝጋ',\n        loadingText: 'በመጫን ላይ…',\n        noOptionsText: 'አማራጮች የሉም',\n        openText: 'ክፈት'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ዝጋ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'የገጽ አሰሳ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'ወደ ', \"\\u1308\\u133D \").concat(page).concat(selected ? '' : ' ሂድ');\n          }\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          }\n          // if (type === 'previous') {\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        }\n      }\n    }\n  }\n};\nexport const arEG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: _ref2 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref2;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0645\\u0646 \").concat(count !== -1 ? count : \" \\u0623\\u0643\\u062B\\u0631 \\u0645\\u0646\".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \").concat(value !== 1 ? 'نجوم' : 'نجمة'),\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'انتقل إلى ', \" \\u0635\\u0641\\u062D\\u0629 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const arSA = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'الانتقال إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'الانتقال إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'الانتقال إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'الانتقال إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: _ref3 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref3;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0645\\u0646 \").concat(count !== -1 ? count : \" \\u0623\\u0643\\u062B\\u0631 \\u0645\\u0646\".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \").concat(value !== 1 ? 'نجوم' : 'نجمة'),\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا توجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'الانتقال إلى ', \" \\u0635\\u0641\\u062D\\u0629 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'الانتقال إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'الانتقال الي الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'الانتقال إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'الانتقال إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const arSD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: _ref4 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref4;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0645\\u0646 \").concat(count !== -1 ? count : \" \\u0623\\u0643\\u062B\\u0631 \\u0645\\u0646\".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \").concat(value !== 1 ? 'نجوم' : 'نجمة'),\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'انتقل إلى ', \" \\u0635\\u0641\\u062D\\u0629 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل الي الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const azAZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göstər'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          }\n          // if (type === 'previous') {\n          return 'Əvvəlki səhifəyə keç';\n        },\n        labelRowsPerPage: 'Səhifəyə düşən sətrlər:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dən ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Ulduz';\n          const lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Ulduzlar';\n          }\n          return \"\".concat(value, \" \").concat(pluralForm);\n        },\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Silmək',\n        closeText: 'Bağlamaq',\n        loadingText: 'Yüklənir…',\n        noOptionsText: 'Seçimlər mövcud deyil',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bağlamaq'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Səhifənin naviqasiyası',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(page, \" \").concat(selected ? 'səhifə' : 'səhifəyə keç');\n          }\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          }\n          // if (type === 'previous') {\n          return 'Əvvəlki səhifəyə keç';\n        }\n      }\n    }\n  }\n};\nexport const bnBD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'পথ দেখান'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          }\n          // if (type === 'previous') {\n          return 'আগের পৃষ্ঠায় যান';\n        },\n        labelRowsPerPage: 'প্রতি পৃষ্ঠায় সারি:',\n        labelDisplayedRows: _ref5 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref5;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" / \").concat(count !== -1 ? count : \"\".concat(to, \" \\u09A5\\u09C7\\u0995\\u09C7 \\u09AC\\u09C7\\u09B6\\u09BF\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\u09B8\\u09CD\\u099F\\u09BE\\u09B0\"),\n        emptyLabelText: 'খালি'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'পরিষ্কার করুন',\n        closeText: 'বন্ধ করুন',\n        loadingText: 'লোড হচ্ছে…',\n        noOptionsText: 'কোন অপশন নেই',\n        openText: 'ওপেন করুন'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'বন্ধ করুন'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'পেজিনেশন নেভিগেশন',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'যান ', \"\\u09AA\\u09C3\\u09B7\\u09CD\\u09A0\\u09BE \").concat(page, \"-\\u098F\");\n          }\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          }\n          // if (type === 'previous') {\n          return 'আগের পৃষ্ঠায় যান';\n        }\n      }\n    }\n  }\n};\nexport const beBY = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Паказаць шлях'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перайсці на першую старонку';\n          }\n          if (type === 'last') {\n            return 'Перайсці на апошнюю старонку';\n          }\n          if (type === 'next') {\n            return 'Перайсці на наступную старонку';\n          }\n          // if (type === 'previous') {\n          return 'Перайсці на папярэднюю старонку';\n        },\n        labelRowsPerPage: 'Радкоў на старонцы:',\n        labelDisplayedRows: _ref6 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref6;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0437 \").concat(count !== -1 ? count : \"\\u0431\\u043E\\u043B\\u044C\\u0448 \\u0447\\u044B\\u043C \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Зорак';\n          const lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5 && (value < 10 || value > 20)) {\n            pluralForm = 'Зоркі';\n          } else if (lastDigit === 1 && value % 100 !== 11) {\n            pluralForm = 'Зорка';\n          }\n          return \"\".concat(value, \" \").concat(pluralForm);\n        },\n        emptyLabelText: 'Рэйтынг адсутнічае'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Ачысціць',\n        closeText: 'Закрыць',\n        loadingText: 'Загрузка…',\n        noOptionsText: 'Няма варыянтаў',\n        openText: 'Адкрыць'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Закрыць'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навігацыя па старонкам',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return \"\".concat(page, \" \\u0441\\u0442\\u0430\\u0440\\u043E\\u043D\\u043A\\u0430\");\n            }\n            return \"\\u041F\\u0435\\u0440\\u0430\\u0439\\u0441\\u0446\\u0456 \\u043D\\u0430 \".concat(page, \" \\u0441\\u0442\\u0430\\u0440\\u043E\\u043D\\u043A\\u0443\");\n          }\n          if (type === 'first') {\n            return 'Перайсці на першую старонку';\n          }\n          if (type === 'last') {\n            return 'Перайсці на апошнюю старонку';\n          }\n          if (type === 'next') {\n            return 'Перайсці на наступную старонку';\n          }\n          // if (type === 'previous') {\n          return 'Перайсці на папярэднюю старонку';\n        }\n      }\n    }\n  }\n};\nexport const bgBG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показване на пътя'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          }\n          // if (type === 'previous') {\n          return 'Отиди на предишната страница';\n        },\n        labelRowsPerPage: 'Редове на страница:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} от ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\u0417\\u0432\\u0435\\u0437\\u0434\").concat(value !== 1 ? 'и' : 'а'),\n        emptyLabelText: 'Изчисти'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Изчисти',\n        closeText: 'Затвори',\n        loadingText: 'Зареждане…',\n        noOptionsText: 'Няма налични опции',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Пагинация',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Към ', \"\\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          }\n          // if (type === 'previous') {\n          return 'Отиди на предишната страница';\n        }\n      }\n    }\n  }\n};\nexport const caES = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Files per pàgina:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} de ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \").concat(value !== 1 ? 'Estrelles' : 'Estrella'),\n        emptyLabelText: 'Buit'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Netejar',\n        closeText: 'Tancar',\n        loadingText: 'Carregant…',\n        noOptionsText: 'Sense opcions',\n        openText: 'Obert'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tancat'\n      }\n    }\n    // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\nexport const csCZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázat cestu'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          }\n          // if (type === 'previous') {\n          return 'Jít na předchozí stránku';\n        },\n        labelRowsPerPage: 'Řádků na stránce:',\n        labelDisplayedRows: _ref7 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref7;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" z \").concat(count !== -1 ? count : \"v\\xEDce ne\\u017E \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return \"\".concat(value, \" hv\\u011Bzdi\\u010Dka\");\n          }\n          if (value >= 2 && value <= 4) {\n            return \"\".concat(value, \" hv\\u011Bzdi\\u010Dky\");\n          }\n          return \"\".concat(value, \" hv\\u011Bzdi\\u010Dek\");\n        },\n        emptyLabelText: 'Prázdné'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazat',\n        closeText: 'Zavřít',\n        loadingText: 'Načítání…',\n        noOptionsText: 'Žádné možnosti',\n        openText: 'Otevřít'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavřít'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigace stránkováním',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Jít na ').concat(page, \". str\\xE1nku\");\n          }\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          }\n          // if (type === 'previous') {\n          return 'Jít na předchozí stránku';\n        }\n      }\n    }\n  }\n};\nexport const daDK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til den forrige side';\n        },\n        labelRowsPerPage: 'Rækker pr side:',\n        labelDisplayedRows: _ref8 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref8;\n          return \"\".concat(from, \"-\").concat(to, \" af \").concat(count !== -1 ? count : \"mere end \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" Stjern\").concat(value !== 1 ? 'er' : ''),\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Slet',\n        closeText: 'Luk',\n        loadingText: 'Indlæser…',\n        noOptionsText: 'Ingen muligheder',\n        openText: 'Åben'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Luk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sideinddelings navigation',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Go to ', \"page \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til den forrige side';\n        }\n      }\n    }\n  }\n};\nexport const deDE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pfad anzeigen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          }\n          // if (type === 'previous') {\n          return 'Zur vorherigen Seite';\n        },\n        labelRowsPerPage: 'Zeilen pro Seite:',\n        labelDisplayedRows: _ref9 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref9;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" von \").concat(count !== -1 ? count : \"mehr als \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \").concat(value !== 1 ? 'Sterne' : 'Stern'),\n        emptyLabelText: 'Keine Wertung'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Leeren',\n        closeText: 'Schließen',\n        loadingText: 'Wird geladen…',\n        noOptionsText: 'Keine Optionen',\n        openText: 'Öffnen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Schließen'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigation via Seitennummerierung',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Gehe zu ', \"Seite \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          }\n          // if (type === 'previous') {\n          return 'Zur vorherigen Seite';\n        }\n      }\n    }\n  }\n};\nexport const elGR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Εμφάνιση διαδρομής'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          }\n\n          // if (type === \"previous\") {\n          return 'Προηγούμενη σελίδα';\n        },\n        labelRowsPerPage: 'Γραμμές ανα σελίδα:',\n        labelDisplayedRows: _ref10 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref10;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u03B1\\u03C0\\u03CC \").concat(count !== -1 ? count : \"\\u03C0\\u03AC\\u03BD\\u03C9 \\u03B1\\u03C0\\u03CC \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\u0391\\u03C3\\u03C4\\u03AD\\u03C1\\u03B9\").concat(value !== 1 ? 'α' : ''),\n        emptyLabelText: 'Χωρίς βαθμολόγηση'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Καθαρισμός',\n        closeText: 'Κλείσιμο',\n        loadingText: 'Φόρτωση…',\n        noOptionsText: 'Δεν υπάρχουν επιλογές',\n        openText: 'Άνοιγμα'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Κλείσιμο'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Πλοήγηση σε σελίδες',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Μετάβαση ', \"\\u03C3\\u03B5\\u03BB\\u03AF\\u03B4\\u03B1 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          }\n\n          // if (type === \"previous\") {\n          return 'Προηγούμενη σελίδα';\n        }\n      }\n    }\n  }\n};\n\n// default\nexport const enUS = {\n  /*\n  components: {\n    MuiBreadcrumbs: { defaultProps: {\n      expandText: 'Show path',\n    }},\n    MuiTablePagination: { defaultProps: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n      labelRowsPerPage: 'Rows per page:',\n      labelDisplayedRows: ({ from, to, count }) =>\n  `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`,\n    }},\n    MuiRating: { defaultProps: {\n      getLabelText: value => `${value} Star${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Empty',\n    }},\n    MuiAutocomplete: { defaultProps: {\n      clearText: 'Clear',\n      closeText: 'Close',\n      loadingText: 'Loading…',\n      noOptionsText: 'No options',\n      openText: 'Open',\n    }},\n    MuiAlert: { defaultProps: {\n      closeText: 'Close',\n    }},\n    MuiPagination: {  defaultProps: {\n      'aria-label': 'Pagination navigation',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Go to '}page ${page}`;\n        }\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n    }},\n  },\n  */\n};\nexport const esES = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar ruta'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          }\n          // if (type === 'previous') {\n          return 'Ir a la página anterior';\n        },\n        labelRowsPerPage: 'Filas por página:',\n        labelDisplayedRows: _ref11 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref11;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" de \").concat(count !== -1 ? count : \"m\\xE1s de \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" Estrella\").concat(value !== 1 ? 's' : ''),\n        emptyLabelText: 'Vacío'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpiar',\n        closeText: 'Cerrar',\n        loadingText: 'Cargando…',\n        noOptionsText: 'Sin opciones',\n        openText: 'Abierto'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Cerrar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginador',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Ir a la ', \"p\\xE1gina \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          }\n          // if (type === 'previous') {\n          return 'Ir a la página anterior';\n        }\n      }\n    }\n  }\n};\nexport const etEE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näita teed'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          }\n          // if (type === 'previous') {\n          return 'Vali eelmine lehekülg';\n        },\n        labelRowsPerPage: 'Ridu leheküljel:',\n        labelDisplayedRows: _ref12 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref12;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" / \").concat(count !== -1 ? count : \"rohkem kui \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" T\\xE4rn\").concat(value !== 1 ? 'i' : ''),\n        emptyLabelText: 'Tühi'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tühjenda',\n        closeText: 'Sulge',\n        loadingText: 'Laen…',\n        noOptionsText: 'Valikuid ei ole',\n        openText: 'Ava'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulge'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lehekülgede valik',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Vali ', \"lehek\\xFClg \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          }\n          // if (type === 'previous') {\n          return 'Vali eelmine lehekülg';\n        }\n      }\n    }\n  }\n};\nexport const faIR = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'نمایش مسیر'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          }\n          // if (type === 'previous') {\n          return 'رفتن به صفحه‌ی قبلی';\n        },\n        labelRowsPerPage: 'تعداد سطرهای هر صفحه:',\n        labelDisplayedRows: _ref13 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref13;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0627\\u0632 \").concat(count !== -1 ? count : \"\\u0628\\u06CC\\u0634\\u062A\\u0631 \\u0627\\u0632 \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\u0633\\u062A\\u0627\\u0631\\u0647\"),\n        emptyLabelText: 'خالی'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'پاک‌کردن',\n        closeText: 'بستن',\n        loadingText: 'در حال بارگذاری…',\n        noOptionsText: 'بی‌نتیجه',\n        openText: 'بازکردن'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'بستن'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ناوبری صفحه',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'رفتن به ', \"\\u0635\\u0641\\u062D\\u0647\\u0654 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          }\n          // if (type === 'previous') {\n          return 'رفتن به صفحه‌ی قبلی';\n        }\n      }\n    }\n  }\n};\nexport const fiFI = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näytä reitti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          }\n          // if (type === 'previous') {\n          return 'Mene edelliselle sivulle';\n        },\n        labelRowsPerPage: 'Rivejä per sivu:',\n        labelDisplayedRows: _ref14 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref14;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" / \").concat(count !== -1 ? count : \"enemm\\xE4n kuin \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" T\\xE4ht\").concat(value !== 1 ? 'eä' : 'i'),\n        emptyLabelText: 'Tyhjä'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tyhjennä',\n        closeText: 'Sulje',\n        loadingText: 'Ladataan…',\n        noOptionsText: 'Ei valintoja',\n        openText: 'Avaa'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulje'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sivutus navigaatio',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? 'sivu' : 'Mene sivulle', \" \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          }\n          // if (type === 'previous') {\n          return 'Mene edelliselle sivulle';\n        }\n      }\n    }\n  }\n};\nexport const frFR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Montrer le chemin'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          }\n          // if (type === 'previous') {\n          return 'Aller à la page précédente';\n        },\n        labelRowsPerPage: 'Lignes par page :',\n        labelDisplayedRows: _ref15 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref15;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" sur \").concat(count !== -1 ? count : \"plus que \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" Etoile\").concat(value !== 1 ? 's' : ''),\n        emptyLabelText: 'Vide'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vider',\n        closeText: 'Fermer',\n        loadingText: 'Chargement…',\n        noOptionsText: 'Pas de résultats',\n        openText: 'Ouvrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fermer'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'navigation de pagination',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Aller à la ', \"page \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          }\n          // if (type === 'previous') {\n          return 'Aller à la page précédente';\n        }\n      }\n    }\n  }\n};\nexport const heIL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'הצג נתיב'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          }\n          // if (type === 'previous') {\n          return 'לעמוד הקודם';\n        },\n        labelRowsPerPage: 'שורות בעמוד:',\n        labelDisplayedRows: _ref16 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref16;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u05DE\\u05EA\\u05D5\\u05DA \").concat(count !== -1 ? count : \"\\u05D9\\u05D5\\u05EA\\u05E8 \\u05DE \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\u05DB\\u05D5\\u05DB\\u05D1\").concat(value !== 1 ? 'ים' : ''),\n        emptyLabelText: 'ריק'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'נקה',\n        closeText: 'סגור',\n        loadingText: 'טוען…',\n        noOptionsText: 'אין אופציות',\n        openText: 'פתח'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'סגור'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ניווט בעמודים',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'ל ', \"\\u05E2\\u05DE\\u05D5\\u05D3 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          }\n          // if (type === 'previous') {\n          return 'לעמוד הקודם';\n        }\n      }\n    }\n  }\n};\nexport const hiIN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'रास्ता दिखायें'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          }\n          // if (type === 'previous') {\n          return 'पिछले पृष्ठ पर जाएँ';\n        },\n        labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',\n        labelDisplayedRows: _ref17 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref17;\n          return \"\".concat(from, \"-\").concat(to === -1 ? count : to, \" \\u0915\\u0941\\u0932 \").concat(count, \" \\u092E\\u0947\\u0902\");\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\u0924\\u093E\\u0930\").concat(value !== 1 ? 'े' : 'ा'),\n        emptyLabelText: 'रिक्त'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'हटायें',\n        closeText: 'बंद करें',\n        loadingText: 'लोड हो रहा है…',\n        noOptionsText: 'कोई विकल्प नहीं',\n        openText: 'खोलें'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'बंद करें'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'पृस्ठानुसार संचालन',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\\u092A\\u0943\\u0937\\u094D\\u0920 \".concat(page, \" \").concat(selected ? '' : ' पर जाएँ');\n          }\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          }\n          // if (type === 'previous') {\n          return 'पिछले पृष्ठ पर जाएँ';\n        }\n      }\n    }\n  }\n};\n\n// Croatian - Hrvatski\nexport const hrHR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na posljednju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: _ref18 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref18;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" od \").concat(count !== -1 ? count : \"vi\\u0161e nego \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvijezde';\n          }\n          return 'Zvijezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Idi na ', \"stranicu \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const huHU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Útvonal'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n          if (type === 'next') {\n            return 'Következő oldalra';\n          }\n          // if (type === 'previous') {\n          return 'Előző oldalra';\n        },\n        labelRowsPerPage: 'Sorok száma:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" Csillag\"),\n        emptyLabelText: 'Üres'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Törlés',\n        closeText: 'Bezárás',\n        loadingText: 'Töltés…',\n        noOptionsText: 'Nincs találat',\n        openText: 'Megnyitás'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bezárás'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lapozás',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(page, \". oldal\").concat(selected ? '' : 'ra');\n          }\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n          if (type === 'next') {\n            return 'Következő oldalra';\n          }\n          // if (type === 'previous') {\n          return 'Előző oldalra';\n        }\n      }\n    }\n  }\n};\nexport const hyAM = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Տողեր մեկ էջում`'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\u0531\\u057D\\u057F\\u0572\"),\n        emptyLabelText: 'Դատարկ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Մաքրել',\n        closeText: 'Փակել',\n        loadingText: 'Բեռնում…',\n        noOptionsText: 'Տարբերակներ չկան',\n        openText: 'Բացել'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Փակել'\n      }\n    }\n    // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\nexport const idID = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Baris per halaman:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dari ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" Bintang\")\n        // emptyLabelText: 'Empty',\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hapus',\n        closeText: 'Tutup',\n        loadingText: 'Memuat…',\n        noOptionsText: 'Tidak ada opsi',\n        openText: 'Buka'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tutup'\n      }\n    }\n    // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\nexport const isIS = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Sýna slóð'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Fara á fyrstu síðu';\n          }\n          if (type === 'last') {\n            return 'Fara á síðustu síðu';\n          }\n          if (type === 'next') {\n            return 'Fara á næstu síðu';\n          }\n          // if (type === 'previous') {\n          return 'Fara á fyrri síðu';\n        },\n        labelRowsPerPage: 'Raðir á síðu:',\n        labelDisplayedRows: _ref19 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref19;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" af \").concat(count !== -1 ? count : \"fleiri enn \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \").concat(value === 1 ? 'stjarna' : 'stjörnur'),\n        emptyLabelText: 'Tómt'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hreinsa',\n        closeText: 'Loka',\n        loadingText: 'Hlaða…',\n        noOptionsText: 'Engar niðurstöður',\n        openText: 'Opna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Loka'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Síðuflakk',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? 'Síða' : 'Fara á síðu', \" \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Fara á fyrstu síðu';\n          }\n          if (type === 'last') {\n            return 'Fara á síðustu síðu';\n          }\n          if (type === 'next') {\n            return 'Fara á næstu síðu';\n          }\n          // if (type === 'previous') {\n          return 'Fara á fyrri síðu';\n        }\n      }\n    }\n  }\n};\nexport const itIT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visualizza percorso'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          }\n          // if (type === 'previous') {\n          return 'Vai alla pagina precedente';\n        },\n        labelRowsPerPage: 'Righe per pagina:',\n        labelDisplayedRows: _ref20 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref20;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" di \").concat(count !== -1 ? count : \"pi\\xF9 di \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" Stell\").concat(value !== 1 ? 'e' : 'a'),\n        emptyLabelText: 'Vuoto'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Svuota',\n        closeText: 'Chiudi',\n        loadingText: 'Caricamento in corso…',\n        noOptionsText: 'Nessuna opzione',\n        openText: 'Apri'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Chiudi'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigazione impaginata',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Vai alla ', \"pagina \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          }\n          // if (type === 'previous') {\n          return 'Vai alla pagina precedente';\n        }\n      }\n    }\n  }\n};\nexport const jaJP = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'すべて表示'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n          if (type === 'next') {\n            return '次のページへ';\n          }\n          // if (type === 'previous') {\n          return '前のページへ';\n        },\n        labelRowsPerPage: 'ページあたりの行数:',\n        labelDisplayedRows: _ref21 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref21;\n          return \"\".concat(from, \"\\uFF5E\").concat(to, \" / \").concat(count !== -1 ? count : \"\".concat(to, \"\\u4EE5\\u4E0A\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\\u661F\".concat(value),\n        emptyLabelText: '星なし'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'クリア',\n        closeText: '閉じる',\n        loadingText: '読み込み中…',\n        noOptionsText: 'データがありません',\n        openText: '開く'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '閉じる'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ページ選択',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\\u30DA\\u30FC\\u30B8\".concat(page).concat(selected ? '' : 'へ');\n          }\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n          if (type === 'next') {\n            return '次のページへ';\n          }\n          // if (type === 'previous') {\n          return '前のページへ';\n        }\n      }\n    }\n  }\n};\nexport const khKH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'បង្ហាញផ្លូវ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          }\n          // if (type === 'previous') {\n          return 'ទៅទំព័រមុន';\n        },\n        labelRowsPerPage: 'ចំនួនជួរដេកក្នុងមួយទំព័រ:',\n        labelDisplayedRows: _ref22 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref22;\n          return \"\".concat(from, \" - \").concat(to, \" \\u1793\\u17C3 \").concat(count !== -1 ? count : \"\\u1785\\u17D2\\u179A\\u17BE\\u1793\\u1787\\u17B6\\u1784 \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\u1795\\u17D2\\u1780\\u17B6\\u1799\").concat(value !== 1 ? '' : ''),\n        emptyLabelText: 'ទទេ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'លុបចោល',\n        closeText: 'បិទ',\n        loadingText: 'កំពុងលោត…',\n        noOptionsText: 'គ្មានជម្រើស',\n        openText: 'បើក'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'បិទ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'រុករកទំព័រ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'ទៅ ', \"\\u1791\\u17C6\\u1796\\u17D0\\u179A \").concat(page);\n          }\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          }\n          // if (type === 'previous') {\n          return 'ទៅទំព័រមុន';\n        }\n      }\n    }\n  }\n};\nexport const koKR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '경로 보기'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          }\n          // if (type === 'previous') {\n          return '이전 페이지로 이동';\n        },\n        labelRowsPerPage: '페이지 당 행:',\n        labelDisplayedRows: _ref23 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref23;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" / \").concat(count !== -1 ? count : \"\".concat(to, \"\\uAC1C \\uC774\\uC0C1\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\uC810\"),\n        emptyLabelText: '빈 텍스트'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '지우기',\n        closeText: '닫기',\n        loadingText: '불러오는 중…',\n        noOptionsText: '옵션 없음',\n        openText: '열기'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '닫기'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '페이지네이션 네비게이션',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(page, \" \\uBC88\\uC9F8 \\uD398\\uC774\\uC9C0\").concat(selected ? '' : '로 이동');\n          }\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          }\n          // if (type === 'previous') {\n          return '이전 페이지로 이동';\n        }\n      }\n    }\n  }\n};\nexport const kuCKB = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ڕێچکە پیشان بدە'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'چوونە یەکەم پەڕە';\n          }\n          if (type === 'last') {\n            return 'چوونە کۆتا پەڕە';\n          }\n          if (type === 'next') {\n            return 'چوونە پەڕەی دواتر';\n          }\n          // if (type === 'previous') {\n          return 'گەڕانەوە بۆ پەڕەی پێشوو';\n        },\n        labelRowsPerPage: 'ژمارەی ڕیزەکان لە هەر پەڕەیەک:',\n        labelDisplayedRows: _ref24 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref24;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0644\\u06D5 \").concat(count !== -1 ? count : \" \\u0632\\u06CC\\u0627\\u062A\\u0631\\u06D5 \\u0644\\u06D5\".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \").concat(value !== 1 ? 'ئەستێرەکان' : 'ئەستێرە'),\n        emptyLabelText: 'خاڵیە'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'سڕینەوە',\n        closeText: 'داخستن',\n        loadingText: 'لە بارکردندایە...',\n        noOptionsText: 'هیچ بژاردەیەک نیە',\n        openText: 'کردنەوە'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'داخستن'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'گەڕان لە پەڕەکان',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'چوون بۆ ', \" \\u067E\\u06D5\\u0695\\u06D5\\u06CC \").concat(page);\n          }\n          if (type === 'first') {\n            return 'چوونە یەکەم پەڕە';\n          }\n          if (type === 'last') {\n            return 'چوونە کۆتا پەڕە';\n          }\n          if (type === 'next') {\n            return 'چوونە پەڕەی دواتر';\n          }\n          // if (type === 'previous') {\n          return 'گەڕانەوە بۆ پەڕەی پێشوو';\n        }\n      }\n    }\n  }\n};\nexport const kuLatn = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Rê nîşan bide'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Biçe rûpela yekem';\n          }\n          if (type === 'last') {\n            return 'Biçe rûpela dawî';\n          }\n          if (type === 'next') {\n            return 'Biçe rûpela din';\n          }\n          // if (type === 'previous') {\n          return 'Biçe rûpela berê';\n        },\n        labelRowsPerPage: 'Rêz li ser rûpelê:',\n        labelDisplayedRows: _ref25 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref25;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" of \").concat(count !== -1 ? count : \"z\\xEAdetir ji \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" St\\xEArk\"),\n        emptyLabelText: 'Vala'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Paqij bike',\n        closeText: 'Bigre',\n        loadingText: 'Tê barkirin…',\n        noOptionsText: 'Vebijêrk tune',\n        openText: 'Veke'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bigre'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navîgasyona rûpelan',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Biçe ', \"r\\xFBpel \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Biçe rûpela yekem';\n          }\n          if (type === 'last') {\n            return 'Biçe rûpela dawî';\n          }\n          if (type === 'next') {\n            return 'Biçe rûpela din';\n          }\n          // if (type === 'previous') {\n          return 'Biçe rûpela berê';\n        }\n      }\n    }\n  }\n};\nexport const kkKZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Толық жолды көрсету'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          }\n          // if (type === 'previous') {\n          return 'Алдыңғы бетке өту';\n        },\n        labelRowsPerPage: 'Беттегі қатарлар:',\n        labelDisplayedRows: _ref26 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref26;\n          return \"\".concat(count !== -1 ? count : \"+\".concat(to), \" \\u049B\\u0430\\u0442\\u0430\\u0440\\u0434\\u044B\\u04A3 \\u0456\\u0448\\u0456\\u043D\\u0435\\u043D \").concat(from, \"\\u2013\").concat(to);\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\u0436\\u04B1\\u043B\\u0434\\u044B\\u0437\"),\n        emptyLabelText: 'Рейтинг жоқ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Тазарту',\n        closeText: 'Жабу',\n        loadingText: 'Жүктелуде…',\n        noOptionsText: 'Қол жетімді нұсқалар жоқ',\n        openText: 'Ашу'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Жабу'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Беттерді шарлау',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return \"\".concat(page, \" \\u2014 \\u0431\\u0435\\u0442\");\n            }\n            return \"\".concat(page, \" \\u2014 \\u0431\\u0435\\u0442\\u043A\\u0435 \\u04E9\\u0442\\u0443\");\n          }\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          }\n          // if (type === 'previous') {\n          return 'Алдыңғы бетке өту';\n        }\n      }\n    }\n  }\n};\n\n// Macedonian - Македонски\nexport const mkMK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Прикажи патека'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          }\n          // if (type === 'previous') {\n          return 'Оди на предходна страница';\n        },\n        labelRowsPerPage: 'Редови по страница:',\n        labelDisplayedRows: _ref27 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref27;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u043E\\u0434 \").concat(count !== -1 ? count : \"\\u043F\\u043E\\u0432\\u0435\\u045C\\u0435 \\u043E\\u0434 \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          return \"\".concat(value, \" \\u0405\\u0432\\u0435\\u0437\\u0434\").concat(lastDigit === 1 ? 'а' : 'и');\n        },\n        emptyLabelText: 'Празно'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Избриши',\n        closeText: 'Затвори',\n        loadingText: 'Се презема',\n        noOptionsText: 'Нема опција',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигација низ страници',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Оди на ', \"\\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          }\n          // if (type === 'previous') {\n          return 'Оди на предходна страница';\n        }\n      }\n    }\n  }\n};\n\n// Myanmar - မြန်မာ\nexport const myMY = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'လမ်းကြောင်းပြပါ။'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ပထမစာမျက်နှာသို့သွားပါ။';\n          }\n          if (type === 'last') {\n            return 'နောက်ဆုံးစာမျက်နှာသို့သွားပါ။';\n          }\n          if (type === 'next') {\n            return 'နောက်စာမျက်နှာသို့သွားပါ။';\n          }\n          // if (type === 'previous') {\n          return 'ယခင်စာမျက်နှာသို့သွားပါ။';\n        },\n        labelRowsPerPage: 'စာမျက်နှာအလိုက် အတန်းများ:',\n        labelDisplayedRows: _ref28 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref28;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u104F \").concat(count !== -1 ? count : \"\\u1011\\u1000\\u103A\\u1015\\u102D\\u102F\\u1015\\u103C\\u102E\\u1038 \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          return \"\".concat(value, \" \\u1000\\u103C\\u101A\\u103A\\u1015\\u103D\\u1004\\u1037\\u103A\").concat(lastDigit === 1 ? '၎' : '');\n        },\n        emptyLabelText: 'ဗလာ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'ရှင်းလင်းသော',\n        closeText: 'ပိတ်လိုက်',\n        loadingText: 'ဖွင့်နေသည်…',\n        noOptionsText: 'ရွေးချယ်ခွင့်မရှိပါ။',\n        openText: 'ဖွင့်သည်။'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ပိတ်လိုက်'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Pagination အညွှန်း',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'သွားပါ။ ', \"\\u1005\\u102C\\u1019\\u103B\\u1000\\u103A\\u1014\\u103E\\u102C \").concat(page);\n          }\n          if (type === 'first') {\n            return 'ပထမစာမျက်နှာသို့သွားပါ။';\n          }\n          if (type === 'last') {\n            return 'နောက်ဆုံးစာမျက်နှာသို့သွားပါ။';\n          }\n          if (type === 'next') {\n            return 'နောက်စာမျက်နှာသို့သွားပါ။';\n          }\n          // if (type === 'previous') {\n          return 'ယခင်စာမျက်နှာသို့သွားပါ။';\n        }\n      }\n    }\n  }\n};\n\n// Malay-Melayu\nexport const msMS = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Tunjukkan laluan'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Pergi ke halaman pertama';\n          }\n          if (type === 'last') {\n            return 'Pergi ke halaman terakhir';\n          }\n          if (type === 'next') {\n            return 'Pergi ke halaman seterusnya';\n          }\n          // if (type === 'previous') {\n          return 'Pergi ke halaman sebelumnya';\n        },\n        labelRowsPerPage: 'Baris setiap halaman:',\n        labelDisplayedRows: _ref29 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref29;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" daripada \").concat(count !== -1 ? count : \"lebih daripada \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          return \"\".concat(value, \" Bintang\").concat(lastDigit === 1 ? 's' : '');\n        },\n        emptyLabelText: 'kosong'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Jelas',\n        closeText: 'tutup',\n        loadingText: 'Memuatkan…',\n        noOptionsText: 'Tiada pilihan',\n        openText: 'Buka'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'tutup'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigasi penomboran',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Pergi ke ', \"muka surat \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Pergi ke halaman pertama';\n          }\n          if (type === 'last') {\n            return 'Pergi ke halaman terakhir';\n          }\n          if (type === 'next') {\n            return 'Pergi ke halaman seterusnya';\n          }\n          // if (type === 'previous') {\n          return 'Pergi ke halaman sebelumnya';\n        }\n      }\n    }\n  }\n};\n\n// Nepali-नेपाली\nexport const neNP = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'बाटो देखाउनुहोस्'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'पहिलो पृष्ठमा जानुहोस्';\n          }\n          if (type === 'last') {\n            return 'अन्तिम पृष्ठमा जानुहोस्';\n          }\n          if (type === 'next') {\n            return 'अर्को पृष्ठमा जानुहोस्';\n          }\n          // if (type === 'previous') {\n          return 'अघिल्लो पृष्ठमा जानुहोस्';\n        },\n        labelRowsPerPage: 'प्रति पृष्ठ पङ्क्तिहरू:',\n        labelDisplayedRows: _ref30 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref30;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0915\\u094B \").concat(count !== -1 ? count : \"\\u0927\\u0947\\u0930\\u0948 \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          return \"\".concat(value, \" \\u0924\\u093E\\u0930\\u093E\").concat(lastDigit === 1 ? 'स' : '');\n        },\n        emptyLabelText: 'खाली'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'खाली गर्नुहोस्',\n        closeText: 'बन्द गर्नुहोस्',\n        loadingText: 'लोड हुँदै...',\n        noOptionsText: 'कुनै विकल्प छैन',\n        openText: 'खोल्नुहोस्'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'बन्द गर्नुहोस्'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'पृष्ठांकन नेभिगेसन',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'जाऊ त्यहाँ ', \"\\u092A\\u0943\\u0937\\u094D\\u0920 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'पहिलो पृष्ठमा जानुहोस्';\n          }\n          if (type === 'last') {\n            return 'अन्तिम पृष्ठमा जानुहोस्';\n          }\n          if (type === 'next') {\n            return 'अर्को पृष्ठमा जानुहोस्';\n          }\n          // if (type === 'previous') {\n          return 'अघिल्लो पृष्ठमा जानुहोस्';\n        }\n      }\n    }\n  }\n};\nexport const nbNO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n          if (type === 'next') {\n            return 'Gå til neste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til forrige side';\n        },\n        labelRowsPerPage: 'Rader per side:',\n        labelDisplayedRows: _ref31 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref31;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" av \").concat(count !== -1 ? count : \"mer enn \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" Stjerne\").concat(value !== 1 ? 'r' : ''),\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tøm',\n        closeText: 'Lukk',\n        loadingText: 'Laster inn…',\n        noOptionsText: 'Ingen alternativer',\n        openText: 'Åpne'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Lukk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginering navigasjon',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Gå til ', \"side \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n          if (type === 'next') {\n            return 'Gå til neste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til forrige side';\n        }\n      }\n    }\n  }\n};\nexport const nnNO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n          if (type === 'next') {\n            return 'Gå til neste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til førre side';\n        },\n        labelRowsPerPage: 'Rader per side:',\n        labelDisplayedRows: _ref32 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref32;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" av \").concat(count !== -1 ? count : \"fleire enn \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" stjerne\").concat(value !== 1 ? 'r' : ''),\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tøm',\n        closeText: 'Lukk',\n        loadingText: 'Lastar inn…',\n        noOptionsText: 'Ingen alternativ',\n        openText: 'Opna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Lukk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigasjon for paginering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Gå til ', \"side \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n          if (type === 'next') {\n            return 'Gå til neste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til førre side';\n        }\n      }\n    }\n  }\n};\nexport const nlNL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pad tonen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          }\n          // if (type === 'previous') {\n          return 'Ga naar vorige pagina';\n        },\n        labelRowsPerPage: 'Regels per pagina:',\n        labelDisplayedRows: _ref33 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref33;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" van \").concat(count !== -1 ? count : \"meer dan \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" Ster\").concat(value !== 1 ? 'ren' : ''),\n        emptyLabelText: 'Leeg'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wissen',\n        closeText: 'Sluiten',\n        loadingText: 'Laden…',\n        noOptionsText: 'Geen opties',\n        openText: 'Openen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sluiten'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigatie via paginering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Ga naar ', \"pagina \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          }\n          // if (type === 'previous') {\n          return 'Ga naar vorige pagina';\n        }\n      }\n    }\n  }\n};\nexport const plPL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaż ścieżkę'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          }\n          // if (type === 'previous') {\n          return 'Przejdź do poprzedniej strony';\n        },\n        labelRowsPerPage: 'Wierszy na stronę:',\n        labelDisplayedRows: _ref34 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref34;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" z \").concat(count !== -1 ? count : \"ponad \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'gwiazdek';\n          const lastDigit = value % 10;\n          if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'gwiazdki';\n          } else if (value === 1) {\n            pluralForm = 'gwiazdka';\n          }\n          return \"\".concat(value, \" \").concat(pluralForm);\n        },\n        emptyLabelText: 'Brak gwiazdek'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wyczyść',\n        closeText: 'Zamknij',\n        loadingText: 'Ładowanie…',\n        noOptionsText: 'Brak opcji',\n        openText: 'Otwórz'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zamknij'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Nawigacja podziału na strony',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return selected ? \"\".concat(page, \". strona\") : \"Przejd\\u017A do \".concat(page, \". strony\");\n          }\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          }\n          // if (type === 'previous') {\n          return 'Przejdź do poprzedniej strony';\n        }\n      }\n    }\n  }\n};\nexport const ptBR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Ir para a página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: _ref35 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref35;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" de \").concat(count !== -1 ? count : \"mais de \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" Estrela\").concat(value !== 1 ? 's' : ''),\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'Carregando…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar pela paginação',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Ir para a ', \"p\\xE1gina \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Ir para a página anterior';\n        }\n      }\n    }\n  }\n};\nexport const ptPT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n          if (type === 'last') {\n            return 'Última página';\n          }\n          if (type === 'next') {\n            return 'Próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: _ref36 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref36;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" de \").concat(count !== -1 ? count : \"mais de \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" Estrela\").concat(value !== 1 ? 's' : ''),\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'A carregar…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar por páginas',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Ir para a ', \"p\\xE1gina \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n          if (type === 'last') {\n            return 'Última página';\n          }\n          if (type === 'next') {\n            return 'Próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Página anterior';\n        }\n      }\n    }\n  }\n};\nexport const roRO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Arată calea'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          }\n          // if (type === 'previous') {\n          return 'Mergi la pagina precedentă';\n        },\n        labelRowsPerPage: 'Rânduri pe pagină:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} din ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" St\").concat(value !== 1 ? 'ele' : 'ea'),\n        emptyLabelText: 'Gol'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Șterge',\n        closeText: 'Închide',\n        loadingText: 'Se încarcă…',\n        noOptionsText: 'Nicio opțiune',\n        openText: 'Deschide'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Închide'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigare prin paginare',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Mergi la ', \"pagina \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          }\n          // if (type === 'previous') {\n          return 'Mergi la pagina precedentă';\n        }\n      }\n    }\n  }\n};\n\n// Serbian - Srpski\nexport const srRS = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na poslednju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: _ref37 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref37;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" od \").concat(count !== -1 ? count : \"vi\\u0161e nego \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvezde';\n          }\n          return 'Zvezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Idi na ', \"stranicu \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const ruRU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показать полный путь'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на предыдущую страницу';\n        },\n        labelRowsPerPage: 'Строк на странице:',\n        labelDisplayedRows: _ref38 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref38;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0438\\u0437 \").concat(count !== -1 ? count : \"\\u0431\\u043E\\u043B\\u0435\\u0435 \\u0447\\u0435\\u043C \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Звёзд';\n          const lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Звезды';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Звезда';\n          }\n          return \"\".concat(value, \" \").concat(pluralForm);\n        },\n        emptyLabelText: 'Рейтинг отсутствует'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистить',\n        closeText: 'Закрыть',\n        loadingText: 'Загрузка…',\n        noOptionsText: 'Нет доступных вариантов',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Закрыть'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигация по страницам',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return \"\".concat(page, \" \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430\");\n            }\n            return \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043D\\u0430 \".concat(page, \" \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443\");\n          }\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на предыдущую страницу';\n        }\n      }\n    }\n  }\n};\nexport const siLK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ගමන් මඟ පෙන්වන්න'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          }\n          // if (type === 'previous') {\n          return 'පෙර පිටුවට යන්න';\n        },\n        labelRowsPerPage: 'පිටුවක පේළි:',\n        labelDisplayedRows: _ref39 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref39;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0DAF\\u0D9A\\u0DCA\\u0DC0\\u0DCF \").concat(count !== -1 ? count : \"\".concat(to, \" \\u0DA7 \\u0DC0\\u0DD0\\u0DA9\\u0DD2 \\u0DB4\\u0DCA\\u200D\\u0DBB\\u0DB8\\u0DCF\\u0DAB\\u0DBA\\u0D9A\\u0DD2\\u0DB1\\u0DCA\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\\u0DAD\\u0DBB\\u0DD4 \".concat(value),\n        emptyLabelText: 'හිස්'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'මකන්න',\n        closeText: 'වසන්න',\n        loadingText: 'නැංවෙමින්…',\n        noOptionsText: 'විකල්ප නැත',\n        openText: 'විවෘත කරන්න'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'වසන්න'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'පිටු අතර සංචරණය',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\\u0DB4\\u0DD2\\u0DA7\\u0DD4\\u0DC0 \".concat(page, \" \").concat(selected ? '' : 'ට යන්න');\n          }\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          }\n          // if (type === 'previous') {\n          return 'පෙර පිටුවට යන්න';\n        }\n      }\n    }\n  }\n};\nexport const skSK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázať cestu '\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          }\n          // if (type === 'previous') {\n          return 'Ísť na predchádzajúcu stránku';\n        },\n        labelRowsPerPage: 'Riadkov na stránke:',\n        labelDisplayedRows: _ref40 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref40;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" z \").concat(count !== -1 ? count : \"viac ako \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return \"\".concat(value, \" hviezdi\\u010Dka\");\n          }\n          if (value >= 2 && value <= 4) {\n            return \"\".concat(value, \" hviezdi\\u010Dky\");\n          }\n          return \"\".concat(value, \" hviezdi\\u010Diek\");\n        },\n        emptyLabelText: 'Prázdne'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazať',\n        closeText: 'Zavrieť',\n        loadingText: 'Načítanie…',\n        noOptionsText: 'Žiadne možnosti',\n        openText: 'Otvoriť'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavrieť'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigácia stránkovanim',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Ísť na ', \"str\\xE1nku \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          }\n          // if (type === 'previous') {\n          return 'Ísť na predchádzajúcu stránku';\n        }\n      }\n    }\n  }\n};\nexport const svSE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visa sökväg'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          }\n          // if (type === 'previous') {\n          return 'Gå till föregående sida';\n        },\n        labelRowsPerPage: 'Rader per sida:',\n        labelDisplayedRows: _ref41 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref41;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" av \").concat(count !== -1 ? count : \"fler \\xE4n \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \").concat(value !== 1 ? 'Stjärnor' : 'Stjärna'),\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Rensa',\n        closeText: 'Stäng',\n        loadingText: 'Laddar…',\n        noOptionsText: 'Inga alternativ',\n        openText: 'Öppna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Stäng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sidnavigering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Gå till ', \"sida \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          }\n          // if (type === 'previous') {\n          return 'Gå till föregående sida';\n        }\n      }\n    }\n  }\n};\nexport const thTH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'แสดงเส้นทาง'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          }\n          // if (type === 'previous') {\n          return 'ไปที่หน้าก่อน';\n        },\n        labelRowsPerPage: 'จำนวนแถวต่อหน้า:',\n        labelDisplayedRows: _ref42 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref42;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0E08\\u0E32\\u0E01 \").concat(count !== -1 ? count : \"\\u0E21\\u0E32\\u0E01\\u0E01\\u0E27\\u0E48\\u0E32 \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\u0E14\\u0E32\\u0E27\"),\n        emptyLabelText: 'ว่างเปล่า'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'เคลียร์',\n        closeText: 'ปิด',\n        loadingText: 'กำลังโหลด…',\n        noOptionsText: 'ไม่มีตัวเลือก',\n        openText: 'เปิด'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ปิด'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'ไปที่', \"\\u0E2B\\u0E19\\u0E49\\u0E32 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          }\n          // if (type === 'previous') {\n          return 'ไปที่หน้าก่อน';\n        }\n      }\n    }\n  }\n};\nexport const trTR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göster'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          }\n          // if (type === 'previous') {\n          return 'Önceki sayfaya git';\n        },\n        labelRowsPerPage: 'Sayfa başına satır:',\n        labelDisplayedRows: _ref43 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref43;\n          return \"\".concat(from, \"-\").concat(to, \" / \").concat(count !== -1 ? count : \"\".concat(to, \"'den fazla\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" Y\\u0131ld\\u0131z\"),\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Temizle',\n        closeText: 'Kapat',\n        loadingText: 'Yükleniyor…',\n        noOptionsText: 'Seçenek yok',\n        openText: 'Aç'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Kapat'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sayfa navigasyonu',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(page, \". \").concat(selected ? 'sayfa' : 'sayfaya git');\n          }\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          }\n          // if (type === 'previous') {\n          return 'Önceki sayfaya git';\n        }\n      }\n    }\n  }\n};\n\n// Tagalog-Tagalog\nexport const tlTL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ipakita ang landas'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Pumunta sa unang pahina';\n          }\n          if (type === 'last') {\n            return 'Pumunta sa huling pahina';\n          }\n          if (type === 'next') {\n            return 'Pumunta sa susunod na pahina';\n          }\n          // if (type === 'previous') {\n          return 'Pumunta sa nakaraang pahina';\n        },\n        labelRowsPerPage: 'Mga hilera bawat pahina:',\n        labelDisplayedRows: _ref44 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref44;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" ng \").concat(count !== -1 ? count : \"higit sa \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" Bituin\").concat(value !== 1 ? 's' : ''),\n        emptyLabelText: 'Walang laman'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Maaliwalas',\n        closeText: 'Isara',\n        loadingText: 'Naglo-load…',\n        noOptionsText: 'Walang mga pagpipilian',\n        openText: 'Bukas'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Isara'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sayfa navigasyonu',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Pumunta sa', \"pahina \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Pumunta sa unang pahina';\n          }\n          if (type === 'last') {\n            return 'Pumunta sa huling pahina';\n          }\n          if (type === 'next') {\n            return 'Pumunta sa susunod na pahina';\n          }\n          // if (type === 'previous') {\n          return 'Pumunta sa nakaraang pahina';\n        }\n      }\n    }\n  }\n};\nexport const ukUA = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показати шлях сторінок'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на попередню сторінку';\n        },\n        labelRowsPerPage: 'Рядків на сторінці:',\n        labelDisplayedRows: _ref45 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref45;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" \\u0437 \").concat(count !== -1 ? count : \"\\u043F\\u043E\\u043D\\u0430\\u0434 \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Зірок';\n          const lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Зірки';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Зірка';\n          }\n          return \"\".concat(value, \" \").concat(pluralForm);\n        },\n        emptyLabelText: 'Рейтинг відсутній'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистити',\n        closeText: 'Згорнути',\n        loadingText: 'Завантаження…',\n        noOptionsText: 'Немає варіантів',\n        openText: 'Розгорнути'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Згорнути'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навігація сторінками',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Перейти на ', \"\\u0441\\u0442\\u043E\\u0440\\u0456\\u043D\\u043A\\u0443 \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на попередню сторінку';\n        }\n      }\n    }\n  }\n};\nexport const urPK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'راستہ دکھائیں'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'پہلے صفحے پر جائیں';\n          }\n          if (type === 'last') {\n            return 'آخری صفحے پر جائیں';\n          }\n          if (type === 'next') {\n            return 'اگلے صفحے پر جائیں';\n          }\n          // if (type === 'previous') {\n          return 'پچھلے صفحے پر جائیں';\n        },\n        labelRowsPerPage: 'ایک صفحے پر قطاریں:',\n        labelDisplayedRows: _ref46 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref46;\n          return \"\".concat(count !== -1 ? \"\".concat(count, \" \\u0645\\u06CC\\u06BA \\u0633\\u06D2\") : \"\".concat(to, \" \\u0633\\u06D2 \\u0630\\u06CC\\u0627\\u062F\\u06C1 \\u0645\\u06CC\\u06BA \\u0633\\u06D2\"), \" \").concat(from, \" \\u0633\\u06D2 \").concat(to, \" \\u0642\\u0637\\u0627\\u0631\\u06CC\\u06BA\");\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\u0633\\u062A\\u0627\\u0631\").concat(value !== 1 ? 'ے' : 'ہ'),\n        emptyLabelText: 'خالی'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'کلئیر',\n        closeText: 'بند کریں',\n        loadingText: 'لوڈ ہو رہا ہے۔۔۔',\n        noOptionsText: 'کوئی آپشن نہیں',\n        openText: 'کھولیں'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'بند کریں'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'صفحات کی ترتیب',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\\u0635\\u0641\\u062D\\u06C1 \\u0646\\u0645\\u0628\\u0631 \".concat(page).concat(selected ? '' : ' پر جائیں');\n          }\n          if (type === 'first') {\n            return 'پہلے صفحے پر جائیں';\n          }\n          if (type === 'last') {\n            return 'آخری صفحے پر جائیں';\n          }\n          if (type === 'next') {\n            return 'اگلے صفحے پر جائیں';\n          }\n          // if (type === 'previous') {\n          return 'پچھلے صفحے پر جائیں';\n        }\n      }\n    }\n  }\n};\nexport const viVN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mở ra'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          }\n          // if (type === 'previous') {\n          return 'Về trang trước đó';\n        },\n        labelRowsPerPage: 'Số hàng mỗi trang:',\n        labelDisplayedRows: _ref47 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref47;\n          return \"\".concat(from, \"\\u2013\").concat(to, \" trong \").concat(count !== -1 ? count : \"nhi\\u1EC1u h\\u01A1n \".concat(to));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" sao\"),\n        emptyLabelText: 'Không có dữ liệu'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Xóa',\n        closeText: 'Đóng',\n        loadingText: 'Đang tải…',\n        noOptionsText: 'Không có lựa chọn nào',\n        openText: 'Mở'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Đóng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Thanh điều khiển trang',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return \"\".concat(selected ? '' : 'Tới ', \"trang \").concat(page);\n          }\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          }\n          // if (type === 'previous') {\n          return 'Về trang trước đó';\n        }\n      }\n    }\n  }\n};\nexport const zhCN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展开'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一页';\n          }\n          if (type === 'last') {\n            return '最后一页';\n          }\n          if (type === 'next') {\n            return '下一页';\n          }\n          return '上一页';\n        },\n        labelRowsPerPage: '每页行数:',\n        labelDisplayedRows: _ref48 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref48;\n          return \"\\u7B2C \".concat(from, \" \\u6761\\u5230\\u7B2C \").concat(to, \" \\u6761\\uFF0C\").concat(count !== -1 ? \"\\u5171 \".concat(count, \" \\u6761\") : \"\\u81F3\\u5C11 \".concat(to, \" \\u6761\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\u9897\\u661F\"),\n        emptyLabelText: '无标签'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '关闭',\n        loadingText: '加载中……',\n        noOptionsText: '没有可用选项',\n        openText: '打开'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '关闭'\n      }\n    }\n  }\n};\nexport const zhHK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n          if (type === 'last') {\n            return '最後一頁';\n          }\n          if (type === 'next') {\n            return '下一頁';\n          }\n          return '上一頁';\n        },\n        labelRowsPerPage: '每頁行數:',\n        labelDisplayedRows: _ref49 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref49;\n          return \"\\u7B2C \".concat(from, \" \\u9805\\u81F3\\u7B2C \").concat(to, \" \\u9805\\uFF0C\").concat(count !== -1 ? \"\\u5171 \".concat(count, \" \\u9805\") : \"\\u8D85\\u904E \".concat(to, \" \\u9805\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\u7C92\\u661F\"),\n        emptyLabelText: '無標籤'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清除',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '沒有可用選項',\n        openText: '開啟'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};\nexport const zhTW = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n          if (type === 'last') {\n            return '最後一頁';\n          }\n          if (type === 'next') {\n            return '下一頁';\n          }\n          return '上一頁';\n        },\n        labelRowsPerPage: '每頁數量:',\n        labelDisplayedRows: _ref50 => {\n          let {\n            from,\n            to,\n            count\n          } = _ref50;\n          return \"\".concat(from, \" ~ \").concat(to, \" / \").concat(count !== -1 ? count : \"\".concat(to, \" \\u4EE5\\u4E0A\"));\n        }\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => \"\".concat(value, \" \\u9846\\u661F\"),\n        emptyLabelText: '無標籤'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '關閉',\n        loadingText: '載入中…',\n        noOptionsText: '沒有可用選項',\n        openText: '打開'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};","map":{"version":3,"names":["amET","components","MuiBreadcrumbs","defaultProps","expandText","MuiTablePagination","getItemAriaLabel","type","labelRowsPerPage","labelDisplayedRows","_ref","from","to","count","concat","MuiRating","getLabelText","value","emptyLabelText","MuiAutocomplete","clearText","closeText","loadingText","noOptionsText","openText","MuiAlert","MuiPagination","page","selected","arEG","_ref2","arSA","_ref3","arSD","_ref4","azAZ","pluralForm","lastDigit","bnBD","_ref5","beBY","_ref6","bgBG","caES","csCZ","_ref7","daDK","_ref8","deDE","_ref9","elGR","_ref10","enUS","esES","_ref11","etEE","_ref12","faIR","_ref13","fiFI","_ref14","frFR","_ref15","heIL","_ref16","hiIN","_ref17","hrHR","_ref18","lastTwoDigits","includes","huHU","hyAM","idID","isIS","_ref19","itIT","_ref20","jaJP","_ref21","khKH","_ref22","koKR","_ref23","kuCKB","_ref24","kuLatn","_ref25","kkKZ","_ref26","mkMK","_ref27","myMY","_ref28","msMS","_ref29","neNP","_ref30","nbNO","_ref31","nnNO","_ref32","nlNL","_ref33","plPL","_ref34","ptBR","_ref35","ptPT","_ref36","roRO","srRS","_ref37","ruRU","_ref38","siLK","_ref39","skSK","_ref40","svSE","_ref41","thTH","_ref42","trTR","_ref43","tlTL","_ref44","ukUA","_ref45","urPK","_ref46","viVN","_ref47","zhCN","_ref48","zhHK","_ref49","zhTW","_ref50"],"sources":["D:/react-project/ChainblockTicket2/Template/node_modules/@mui/material/locale/index.js"],"sourcesContent":["export const amET = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'መንገድ አሳይ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          }\n          // if (type === 'previous') {\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        },\n        labelRowsPerPage: 'ረድፎች በአንድ ገጽ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to} ከ ${count !== -1 ? count : `${to} በላይ`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ኮከ${value !== 1 ? 'ቦች' : 'ብ'}`,\n        emptyLabelText: 'ባዶ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'አጽዳ',\n        closeText: 'ዝጋ',\n        loadingText: 'በመጫን ላይ…',\n        noOptionsText: 'አማራጮች የሉም',\n        openText: 'ክፈት'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ዝጋ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'የገጽ አሰሳ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ወደ '}ገጽ ${page}${selected ? '' : ' ሂድ'}`;\n          }\n          if (type === 'first') {\n            return 'ወደ መጀመሪያው ገጽ ይሂዱ';\n          }\n          if (type === 'last') {\n            return 'ወደ መጨረሻው ገጽ ይሂዱ';\n          }\n          if (type === 'next') {\n            return 'ወደ ቀጣዩ ገጽ ይሂዱ';\n          }\n          // if (type === 'previous') {\n          return 'ወደ ቀዳሚው ገጽ ይሂዱ';\n        }\n      }\n    }\n  }\n};\nexport const arEG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'انتقل إلى '} صفحة ${page}`;\n          }\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const arSA = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'الانتقال إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'الانتقال إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'الانتقال إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'الانتقال إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا توجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'الانتقال إلى '} صفحة ${page}`;\n          }\n          if (type === 'first') {\n            return 'الانتقال إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'الانتقال الي الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'الانتقال إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'الانتقال إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const arSD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'إظهار المسار'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل إلى الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل إلى الصفحة السابقة';\n        },\n        labelRowsPerPage: 'عدد الصفوف في الصفحة:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,\n        emptyLabelText: 'فارغ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'مسح',\n        closeText: 'إغلاق',\n        loadingText: 'جار التحميل...',\n        noOptionsText: 'لا يوجد خيارات',\n        openText: 'فتح'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'إغلاق'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'التنقل عبر الصفحات',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'انتقل إلى '} صفحة ${page}`;\n          }\n          if (type === 'first') {\n            return 'انتقل إلى الصفحة الأولى';\n          }\n          if (type === 'last') {\n            return 'انتقل الي الصفحة الأخيرة';\n          }\n          if (type === 'next') {\n            return 'انتقل إلى الصفحة التالية';\n          }\n          // if (type === 'previous') {\n          return 'انتقل إلى الصفحة السابقة';\n        }\n      }\n    }\n  }\n};\nexport const azAZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göstər'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          }\n          // if (type === 'previous') {\n          return 'Əvvəlki səhifəyə keç';\n        },\n        labelRowsPerPage: 'Səhifəyə düşən sətrlər:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dən ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Ulduz';\n          const lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Ulduzlar';\n          }\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Silmək',\n        closeText: 'Bağlamaq',\n        loadingText: 'Yüklənir…',\n        noOptionsText: 'Seçimlər mövcud deyil',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bağlamaq'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Səhifənin naviqasiyası',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} ${selected ? 'səhifə' : 'səhifəyə keç'}`;\n          }\n          if (type === 'first') {\n            return 'Birinci səhifəyə keç';\n          }\n          if (type === 'last') {\n            return 'Sonuncu səhifəyə keç';\n          }\n          if (type === 'next') {\n            return 'Növbəti səhifəyə keç';\n          }\n          // if (type === 'previous') {\n          return 'Əvvəlki səhifəyə keç';\n        }\n      }\n    }\n  }\n};\nexport const bnBD = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'পথ দেখান'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          }\n          // if (type === 'previous') {\n          return 'আগের পৃষ্ঠায় যান';\n        },\n        labelRowsPerPage: 'প্রতি পৃষ্ঠায় সারি:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to} থেকে বেশি`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} স্টার`,\n        emptyLabelText: 'খালি'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'পরিষ্কার করুন',\n        closeText: 'বন্ধ করুন',\n        loadingText: 'লোড হচ্ছে…',\n        noOptionsText: 'কোন অপশন নেই',\n        openText: 'ওপেন করুন'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'বন্ধ করুন'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'পেজিনেশন নেভিগেশন',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'যান '}পৃষ্ঠা ${page}-এ`;\n          }\n          if (type === 'first') {\n            return 'প্রথম পৃষ্ঠায় যান';\n          }\n          if (type === 'last') {\n            return 'শেষ পৃষ্ঠায় যান';\n          }\n          if (type === 'next') {\n            return 'পরবর্তী পৃষ্ঠায় যান';\n          }\n          // if (type === 'previous') {\n          return 'আগের পৃষ্ঠায় যান';\n        }\n      }\n    }\n  }\n};\nexport const beBY = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Паказаць шлях'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перайсці на першую старонку';\n          }\n          if (type === 'last') {\n            return 'Перайсці на апошнюю старонку';\n          }\n          if (type === 'next') {\n            return 'Перайсці на наступную старонку';\n          }\n          // if (type === 'previous') {\n          return 'Перайсці на папярэднюю старонку';\n        },\n        labelRowsPerPage: 'Радкоў на старонцы:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} з ${count !== -1 ? count : `больш чым ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Зорак';\n          const lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5 && (value < 10 || value > 20)) {\n            pluralForm = 'Зоркі';\n          } else if (lastDigit === 1 && value % 100 !== 11) {\n            pluralForm = 'Зорка';\n          }\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рэйтынг адсутнічае'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Ачысціць',\n        closeText: 'Закрыць',\n        loadingText: 'Загрузка…',\n        noOptionsText: 'Няма варыянтаў',\n        openText: 'Адкрыць'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Закрыць'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навігацыя па старонкам',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} старонка`;\n            }\n            return `Перайсці на ${page} старонку`;\n          }\n          if (type === 'first') {\n            return 'Перайсці на першую старонку';\n          }\n          if (type === 'last') {\n            return 'Перайсці на апошнюю старонку';\n          }\n          if (type === 'next') {\n            return 'Перайсці на наступную старонку';\n          }\n          // if (type === 'previous') {\n          return 'Перайсці на папярэднюю старонку';\n        }\n      }\n    }\n  }\n};\nexport const bgBG = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показване на пътя'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          }\n          // if (type === 'previous') {\n          return 'Отиди на предишната страница';\n        },\n        labelRowsPerPage: 'Редове на страница:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} от ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Звезд${value !== 1 ? 'и' : 'а'}`,\n        emptyLabelText: 'Изчисти'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Изчисти',\n        closeText: 'Затвори',\n        loadingText: 'Зареждане…',\n        noOptionsText: 'Няма налични опции',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Пагинация',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Към '}страница ${page}`;\n          }\n          if (type === 'first') {\n            return 'Отиди на първата страница';\n          }\n          if (type === 'last') {\n            return 'Отиди на последната страница';\n          }\n          if (type === 'next') {\n            return 'Отиди на следващата страница';\n          }\n          // if (type === 'previous') {\n          return 'Отиди на предишната страница';\n        }\n      }\n    }\n  }\n};\nexport const caES = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //    expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Files per pàgina:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} de ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Estrelles' : 'Estrella'}`,\n        emptyLabelText: 'Buit'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Netejar',\n        closeText: 'Tancar',\n        loadingText: 'Carregant…',\n        noOptionsText: 'Sense opcions',\n        openText: 'Obert'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tancat'\n      }\n    }\n    // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\nexport const csCZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázat cestu'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          }\n          // if (type === 'previous') {\n          return 'Jít na předchozí stránku';\n        },\n        labelRowsPerPage: 'Řádků na stránce:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `více než ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hvězdička`;\n          }\n          if (value >= 2 && value <= 4) {\n            return `${value} hvězdičky`;\n          }\n          return `${value} hvězdiček`;\n        },\n        emptyLabelText: 'Prázdné'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazat',\n        closeText: 'Zavřít',\n        loadingText: 'Načítání…',\n        noOptionsText: 'Žádné možnosti',\n        openText: 'Otevřít'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavřít'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigace stránkováním',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Jít na '}${page}. stránku`;\n          }\n          if (type === 'first') {\n            return 'Jít na první stránku';\n          }\n          if (type === 'last') {\n            return 'Jít na poslední stránku';\n          }\n          if (type === 'next') {\n            return 'Jít na další stránku';\n          }\n          // if (type === 'previous') {\n          return 'Jít na předchozí stránku';\n        }\n      }\n    }\n  }\n};\nexport const daDK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til den forrige side';\n        },\n        labelRowsPerPage: 'Rækker pr side:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to} af ${count !== -1 ? count : `mere end ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjern${value !== 1 ? 'er' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Slet',\n        closeText: 'Luk',\n        loadingText: 'Indlæser…',\n        noOptionsText: 'Ingen muligheder',\n        openText: 'Åben'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Luk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sideinddelings navigation',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Go to '}page ${page}`;\n          }\n          if (type === 'first') {\n            return 'Gå til den første side';\n          }\n          if (type === 'last') {\n            return 'Gå til den sidste side';\n          }\n          if (type === 'next') {\n            return 'Gå til den næste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til den forrige side';\n        }\n      }\n    }\n  }\n};\nexport const deDE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pfad anzeigen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          }\n          // if (type === 'previous') {\n          return 'Zur vorherigen Seite';\n        },\n        labelRowsPerPage: 'Zeilen pro Seite:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} von ${count !== -1 ? count : `mehr als ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Sterne' : 'Stern'}`,\n        emptyLabelText: 'Keine Wertung'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Leeren',\n        closeText: 'Schließen',\n        loadingText: 'Wird geladen…',\n        noOptionsText: 'Keine Optionen',\n        openText: 'Öffnen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Schließen'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigation via Seitennummerierung',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gehe zu '}Seite ${page}`;\n          }\n          if (type === 'first') {\n            return 'Zur ersten Seite';\n          }\n          if (type === 'last') {\n            return 'Zur letzten Seite';\n          }\n          if (type === 'next') {\n            return 'Zur nächsten Seite';\n          }\n          // if (type === 'previous') {\n          return 'Zur vorherigen Seite';\n        }\n      }\n    }\n  }\n};\nexport const elGR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Εμφάνιση διαδρομής'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          }\n\n          // if (type === \"previous\") {\n          return 'Προηγούμενη σελίδα';\n        },\n        labelRowsPerPage: 'Γραμμές ανα σελίδα:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} από ${count !== -1 ? count : `πάνω από ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Αστέρι${value !== 1 ? 'α' : ''}`,\n        emptyLabelText: 'Χωρίς βαθμολόγηση'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Καθαρισμός',\n        closeText: 'Κλείσιμο',\n        loadingText: 'Φόρτωση…',\n        noOptionsText: 'Δεν υπάρχουν επιλογές',\n        openText: 'Άνοιγμα'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Κλείσιμο'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Πλοήγηση σε σελίδες',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Μετάβαση '}σελίδα ${page}`;\n          }\n          if (type === 'first') {\n            return 'Πρώτη σελίδα';\n          }\n          if (type === 'last') {\n            return 'Τελευταία σελίδα';\n          }\n          if (type === 'next') {\n            return 'Επόμενη σελίδα';\n          }\n\n          // if (type === \"previous\") {\n          return 'Προηγούμενη σελίδα';\n        }\n      }\n    }\n  }\n};\n\n// default\nexport const enUS = {\n  /*\n  components: {\n    MuiBreadcrumbs: { defaultProps: {\n      expandText: 'Show path',\n    }},\n    MuiTablePagination: { defaultProps: {\n      getItemAriaLabel: (type) => {\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n      labelRowsPerPage: 'Rows per page:',\n      labelDisplayedRows: ({ from, to, count }) =>\n  `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`,\n    }},\n    MuiRating: { defaultProps: {\n      getLabelText: value => `${value} Star${value !== 1 ? 's' : ''}`,\n      emptyLabelText: 'Empty',\n    }},\n    MuiAutocomplete: { defaultProps: {\n      clearText: 'Clear',\n      closeText: 'Close',\n      loadingText: 'Loading…',\n      noOptionsText: 'No options',\n      openText: 'Open',\n    }},\n    MuiAlert: { defaultProps: {\n      closeText: 'Close',\n    }},\n    MuiPagination: {  defaultProps: {\n      'aria-label': 'Pagination navigation',\n      getItemAriaLabel: (type, page, selected) => {\n        if (type === 'page') {\n          return `${selected ? '' : 'Go to '}page ${page}`;\n        }\n        if (type === 'first') {\n          return 'Go to first page';\n        }\n        if (type === 'last') {\n          return 'Go to last page';\n        }\n        if (type === 'next') {\n          return 'Go to next page';\n        }\n        // if (type === 'previous') {\n        return 'Go to previous page';\n      },\n    }},\n  },\n  */\n};\nexport const esES = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar ruta'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          }\n          // if (type === 'previous') {\n          return 'Ir a la página anterior';\n        },\n        labelRowsPerPage: 'Filas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `más de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrella${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vacío'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpiar',\n        closeText: 'Cerrar',\n        loadingText: 'Cargando…',\n        noOptionsText: 'Sin opciones',\n        openText: 'Abierto'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Cerrar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginador',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir a la '}página ${page}`;\n          }\n          if (type === 'first') {\n            return 'Ir a la primera página';\n          }\n          if (type === 'last') {\n            return 'Ir a la última página';\n          }\n          if (type === 'next') {\n            return 'Ir a la página siguiente';\n          }\n          // if (type === 'previous') {\n          return 'Ir a la página anterior';\n        }\n      }\n    }\n  }\n};\nexport const etEE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näita teed'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          }\n          // if (type === 'previous') {\n          return 'Vali eelmine lehekülg';\n        },\n        labelRowsPerPage: 'Ridu leheküljel:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `rohkem kui ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Tärn${value !== 1 ? 'i' : ''}`,\n        emptyLabelText: 'Tühi'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tühjenda',\n        closeText: 'Sulge',\n        loadingText: 'Laen…',\n        noOptionsText: 'Valikuid ei ole',\n        openText: 'Ava'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulge'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lehekülgede valik',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vali '}lehekülg ${page}`;\n          }\n          if (type === 'first') {\n            return 'Vali esimene lehekülg';\n          }\n          if (type === 'last') {\n            return 'Vali viimane lehekülg';\n          }\n          if (type === 'next') {\n            return 'Vali järgmine lehekülg';\n          }\n          // if (type === 'previous') {\n          return 'Vali eelmine lehekülg';\n        }\n      }\n    }\n  }\n};\nexport const faIR = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'نمایش مسیر'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          }\n          // if (type === 'previous') {\n          return 'رفتن به صفحه‌ی قبلی';\n        },\n        labelRowsPerPage: 'تعداد سطرهای هر صفحه:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} از ${count !== -1 ? count : `بیشتر از ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ستاره`,\n        emptyLabelText: 'خالی'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'پاک‌کردن',\n        closeText: 'بستن',\n        loadingText: 'در حال بارگذاری…',\n        noOptionsText: 'بی‌نتیجه',\n        openText: 'بازکردن'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'بستن'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ناوبری صفحه',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'رفتن به '}صفحهٔ ${page}`;\n          }\n          if (type === 'first') {\n            return 'رفتن به اولین صفحه';\n          }\n          if (type === 'last') {\n            return 'رفتن به آخرین صفحه';\n          }\n          if (type === 'next') {\n            return 'رفتن به صفحه‌ی بعدی';\n          }\n          // if (type === 'previous') {\n          return 'رفتن به صفحه‌ی قبلی';\n        }\n      }\n    }\n  }\n};\nexport const fiFI = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Näytä reitti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          }\n          // if (type === 'previous') {\n          return 'Mene edelliselle sivulle';\n        },\n        labelRowsPerPage: 'Rivejä per sivu:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `enemmän kuin ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Täht${value !== 1 ? 'eä' : 'i'}`,\n        emptyLabelText: 'Tyhjä'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tyhjennä',\n        closeText: 'Sulje',\n        loadingText: 'Ladataan…',\n        noOptionsText: 'Ei valintoja',\n        openText: 'Avaa'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sulje'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sivutus navigaatio',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? 'sivu' : 'Mene sivulle'} ${page}`;\n          }\n          if (type === 'first') {\n            return 'Mene ensimmäiselle sivulle';\n          }\n          if (type === 'last') {\n            return 'Mene viimeiselle sivulle';\n          }\n          if (type === 'next') {\n            return 'Mene seuraavalle sivulle';\n          }\n          // if (type === 'previous') {\n          return 'Mene edelliselle sivulle';\n        }\n      }\n    }\n  }\n};\nexport const frFR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Montrer le chemin'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          }\n          // if (type === 'previous') {\n          return 'Aller à la page précédente';\n        },\n        labelRowsPerPage: 'Lignes par page :',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} sur ${count !== -1 ? count : `plus que ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Etoile${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vide'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vider',\n        closeText: 'Fermer',\n        loadingText: 'Chargement…',\n        noOptionsText: 'Pas de résultats',\n        openText: 'Ouvrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fermer'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'navigation de pagination',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Aller à la '}page ${page}`;\n          }\n          if (type === 'first') {\n            return 'Aller à la première page';\n          }\n          if (type === 'last') {\n            return 'Aller à la dernière page';\n          }\n          if (type === 'next') {\n            return 'Aller à la page suivante';\n          }\n          // if (type === 'previous') {\n          return 'Aller à la page précédente';\n        }\n      }\n    }\n  }\n};\nexport const heIL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'הצג נתיב'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          }\n          // if (type === 'previous') {\n          return 'לעמוד הקודם';\n        },\n        labelRowsPerPage: 'שורות בעמוד:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} מתוך ${count !== -1 ? count : `יותר מ ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} כוכב${value !== 1 ? 'ים' : ''}`,\n        emptyLabelText: 'ריק'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'נקה',\n        closeText: 'סגור',\n        loadingText: 'טוען…',\n        noOptionsText: 'אין אופציות',\n        openText: 'פתח'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'סגור'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ניווט בעמודים',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ל '}עמוד ${page}`;\n          }\n          if (type === 'first') {\n            return 'לעמוד הראשון';\n          }\n          if (type === 'last') {\n            return 'לעמוד האחרון';\n          }\n          if (type === 'next') {\n            return 'לעמוד הבא';\n          }\n          // if (type === 'previous') {\n          return 'לעמוד הקודם';\n        }\n      }\n    }\n  }\n};\nexport const hiIN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'रास्ता दिखायें'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          }\n          // if (type === 'previous') {\n          return 'पिछले पृष्ठ पर जाएँ';\n        },\n        labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to === -1 ? count : to} कुल ${count} में`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} तार${value !== 1 ? 'े' : 'ा'}`,\n        emptyLabelText: 'रिक्त'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'हटायें',\n        closeText: 'बंद करें',\n        loadingText: 'लोड हो रहा है…',\n        noOptionsText: 'कोई विकल्प नहीं',\n        openText: 'खोलें'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'बंद करें'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'पृस्ठानुसार संचालन',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `पृष्ठ ${page} ${selected ? '' : ' पर जाएँ'}`;\n          }\n          if (type === 'first') {\n            return 'पहले पृष्ठ पर जाएँ';\n          }\n          if (type === 'last') {\n            return 'अंतिम पृष्ठ पर जाएँ';\n          }\n          if (type === 'next') {\n            return 'अगले पृष्ठ पर जाएँ';\n          }\n          // if (type === 'previous') {\n          return 'पिछले पृष्ठ पर जाएँ';\n        }\n      }\n    }\n  }\n};\n\n// Croatian - Hrvatski\nexport const hrHR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na posljednju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvijezde';\n          }\n          return 'Zvijezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\n          }\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sljedeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const huHU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Útvonal'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n          if (type === 'next') {\n            return 'Következő oldalra';\n          }\n          // if (type === 'previous') {\n          return 'Előző oldalra';\n        },\n        labelRowsPerPage: 'Sorok száma:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Csillag`,\n        emptyLabelText: 'Üres'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Törlés',\n        closeText: 'Bezárás',\n        loadingText: 'Töltés…',\n        noOptionsText: 'Nincs találat',\n        openText: 'Megnyitás'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bezárás'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Lapozás',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. oldal${selected ? '' : 'ra'}`;\n          }\n          if (type === 'first') {\n            return 'Első oldalra';\n          }\n          if (type === 'last') {\n            return 'Utolsó oldalra';\n          }\n          if (type === 'next') {\n            return 'Következő oldalra';\n          }\n          // if (type === 'previous') {\n          return 'Előző oldalra';\n        }\n      }\n    }\n  }\n};\nexport const hyAM = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Տողեր մեկ էջում`'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} / ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Աստղ`,\n        emptyLabelText: 'Դատարկ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Մաքրել',\n        closeText: 'Փակել',\n        loadingText: 'Բեռնում…',\n        noOptionsText: 'Տարբերակներ չկան',\n        openText: 'Բացել'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Փակել'\n      }\n    }\n    // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\nexport const idID = {\n  components: {\n    // MuiBreadcrumbs: {\n    //   defaultProps: {\n    //     expandText: 'Show path',\n    //   },\n    // },\n    MuiTablePagination: {\n      defaultProps: {\n        // getItemAriaLabel: (type) => {\n        //   if (type === 'first') {\n        //     return 'Go to first page';\n        //   }\n        //   if (type === 'last') {\n        //     return 'Go to last page';\n        //   }\n        //   if (type === 'next') {\n        //     return 'Go to next page';\n        //   }\n        //   // if (type === 'previous') {\n        //   return 'Go to previous page';\n        // },\n        labelRowsPerPage: 'Baris per halaman:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} dari ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Bintang`\n        // emptyLabelText: 'Empty',\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hapus',\n        closeText: 'Tutup',\n        loadingText: 'Memuat…',\n        noOptionsText: 'Tidak ada opsi',\n        openText: 'Buka'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Tutup'\n      }\n    }\n    // MuiPagination: {\n    //   defaultProps: {\n    //     'aria-label': 'Pagination navigation',\n    //     getItemAriaLabel: (type, page, selected) => {\n    //       if (type === 'page') {\n    //         return `${selected ? '' : 'Go to '}page ${page}`;\n    //       }\n    //       if (type === 'first') {\n    //         return 'Go to first page';\n    //       }\n    //       if (type === 'last') {\n    //         return 'Go to last page';\n    //       }\n    //       if (type === 'next') {\n    //         return 'Go to next page';\n    //       }\n    //       // if (type === 'previous') {\n    //       return 'Go to previous page';\n    //     },\n    //   },\n    // },\n  }\n};\nexport const isIS = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Sýna slóð'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Fara á fyrstu síðu';\n          }\n          if (type === 'last') {\n            return 'Fara á síðustu síðu';\n          }\n          if (type === 'next') {\n            return 'Fara á næstu síðu';\n          }\n          // if (type === 'previous') {\n          return 'Fara á fyrri síðu';\n        },\n        labelRowsPerPage: 'Raðir á síðu:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} af ${count !== -1 ? count : `fleiri enn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value === 1 ? 'stjarna' : 'stjörnur'}`,\n        emptyLabelText: 'Tómt'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Hreinsa',\n        closeText: 'Loka',\n        loadingText: 'Hlaða…',\n        noOptionsText: 'Engar niðurstöður',\n        openText: 'Opna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Loka'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Síðuflakk',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? 'Síða' : 'Fara á síðu'} ${page}`;\n          }\n          if (type === 'first') {\n            return 'Fara á fyrstu síðu';\n          }\n          if (type === 'last') {\n            return 'Fara á síðustu síðu';\n          }\n          if (type === 'next') {\n            return 'Fara á næstu síðu';\n          }\n          // if (type === 'previous') {\n          return 'Fara á fyrri síðu';\n        }\n      }\n    }\n  }\n};\nexport const itIT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visualizza percorso'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          }\n          // if (type === 'previous') {\n          return 'Vai alla pagina precedente';\n        },\n        labelRowsPerPage: 'Righe per pagina:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} di ${count !== -1 ? count : `più di ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stell${value !== 1 ? 'e' : 'a'}`,\n        emptyLabelText: 'Vuoto'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Svuota',\n        closeText: 'Chiudi',\n        loadingText: 'Caricamento in corso…',\n        noOptionsText: 'Nessuna opzione',\n        openText: 'Apri'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Chiudi'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigazione impaginata',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Vai alla '}pagina ${page}`;\n          }\n          if (type === 'first') {\n            return 'Vai alla prima pagina';\n          }\n          if (type === 'last') {\n            return \"Vai all'ultima pagina\";\n          }\n          if (type === 'next') {\n            return 'Vai alla pagina successiva';\n          }\n          // if (type === 'previous') {\n          return 'Vai alla pagina precedente';\n        }\n      }\n    }\n  }\n};\nexport const jaJP = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'すべて表示'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n          if (type === 'next') {\n            return '次のページへ';\n          }\n          // if (type === 'previous') {\n          return '前のページへ';\n        },\n        labelRowsPerPage: 'ページあたりの行数:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}～${to} / ${count !== -1 ? count : `${to}以上`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `星${value}`,\n        emptyLabelText: '星なし'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'クリア',\n        closeText: '閉じる',\n        loadingText: '読み込み中…',\n        noOptionsText: 'データがありません',\n        openText: '開く'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '閉じる'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'ページ選択',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `ページ${page}${selected ? '' : 'へ'}`;\n          }\n          if (type === 'first') {\n            return '最初のページへ';\n          }\n          if (type === 'last') {\n            return '最後のページへ';\n          }\n          if (type === 'next') {\n            return '次のページへ';\n          }\n          // if (type === 'previous') {\n          return '前のページへ';\n        }\n      }\n    }\n  }\n};\nexport const khKH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'បង្ហាញផ្លូវ'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          }\n          // if (type === 'previous') {\n          return 'ទៅទំព័រមុន';\n        },\n        labelRowsPerPage: 'ចំនួនជួរដេកក្នុងមួយទំព័រ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from} - ${to} នៃ ${count !== -1 ? count : `ច្រើនជាង ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ផ្កាយ${value !== 1 ? '' : ''}`,\n        emptyLabelText: 'ទទេ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'លុបចោល',\n        closeText: 'បិទ',\n        loadingText: 'កំពុងលោត…',\n        noOptionsText: 'គ្មានជម្រើស',\n        openText: 'បើក'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'បិទ'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'រុករកទំព័រ',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ទៅ '}ទំព័រ ${page}`;\n          }\n          if (type === 'first') {\n            return 'ទៅទំព័រដំបូង';\n          }\n          if (type === 'last') {\n            return 'ទៅទំព័រចុងក្រោយ';\n          }\n          if (type === 'next') {\n            return 'ទៅទំព័របន្ទាប់';\n          }\n          // if (type === 'previous') {\n          return 'ទៅទំព័រមុន';\n        }\n      }\n    }\n  }\n};\nexport const koKR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '경로 보기'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          }\n          // if (type === 'previous') {\n          return '이전 페이지로 이동';\n        },\n        labelRowsPerPage: '페이지 당 행:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} / ${count !== -1 ? count : `${to}개 이상`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 점`,\n        emptyLabelText: '빈 텍스트'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '지우기',\n        closeText: '닫기',\n        loadingText: '불러오는 중…',\n        noOptionsText: '옵션 없음',\n        openText: '열기'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '닫기'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '페이지네이션 네비게이션',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page} 번째 페이지${selected ? '' : '로 이동'}`;\n          }\n          if (type === 'first') {\n            return '첫 번째 페이지로 이동';\n          }\n          if (type === 'last') {\n            return '마지막 페이지로 이동';\n          }\n          if (type === 'next') {\n            return '다음 페이지로 이동';\n          }\n          // if (type === 'previous') {\n          return '이전 페이지로 이동';\n        }\n      }\n    }\n  }\n};\nexport const kuCKB = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ڕێچکە پیشان بدە'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'چوونە یەکەم پەڕە';\n          }\n          if (type === 'last') {\n            return 'چوونە کۆتا پەڕە';\n          }\n          if (type === 'next') {\n            return 'چوونە پەڕەی دواتر';\n          }\n          // if (type === 'previous') {\n          return 'گەڕانەوە بۆ پەڕەی پێشوو';\n        },\n        labelRowsPerPage: 'ژمارەی ڕیزەکان لە هەر پەڕەیەک:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} لە ${count !== -1 ? count : ` زیاترە لە${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'ئەستێرەکان' : 'ئەستێرە'}`,\n        emptyLabelText: 'خاڵیە'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'سڕینەوە',\n        closeText: 'داخستن',\n        loadingText: 'لە بارکردندایە...',\n        noOptionsText: 'هیچ بژاردەیەک نیە',\n        openText: 'کردنەوە'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'داخستن'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'گەڕان لە پەڕەکان',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'چوون بۆ '} پەڕەی ${page}`;\n          }\n          if (type === 'first') {\n            return 'چوونە یەکەم پەڕە';\n          }\n          if (type === 'last') {\n            return 'چوونە کۆتا پەڕە';\n          }\n          if (type === 'next') {\n            return 'چوونە پەڕەی دواتر';\n          }\n          // if (type === 'previous') {\n          return 'گەڕانەوە بۆ پەڕەی پێشوو';\n        }\n      }\n    }\n  }\n};\nexport const kuLatn = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Rê nîşan bide'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Biçe rûpela yekem';\n          }\n          if (type === 'last') {\n            return 'Biçe rûpela dawî';\n          }\n          if (type === 'next') {\n            return 'Biçe rûpela din';\n          }\n          // if (type === 'previous') {\n          return 'Biçe rûpela berê';\n        },\n        labelRowsPerPage: 'Rêz li ser rûpelê:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} of ${count !== -1 ? count : `zêdetir ji ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stêrk`,\n        emptyLabelText: 'Vala'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Paqij bike',\n        closeText: 'Bigre',\n        loadingText: 'Tê barkirin…',\n        noOptionsText: 'Vebijêrk tune',\n        openText: 'Veke'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Bigre'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navîgasyona rûpelan',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Biçe '}rûpel ${page}`;\n          }\n          if (type === 'first') {\n            return 'Biçe rûpela yekem';\n          }\n          if (type === 'last') {\n            return 'Biçe rûpela dawî';\n          }\n          if (type === 'next') {\n            return 'Biçe rûpela din';\n          }\n          // if (type === 'previous') {\n          return 'Biçe rûpela berê';\n        }\n      }\n    }\n  }\n};\nexport const kkKZ = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Толық жолды көрсету'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          }\n          // if (type === 'previous') {\n          return 'Алдыңғы бетке өту';\n        },\n        labelRowsPerPage: 'Беттегі қатарлар:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${count !== -1 ? count : `+${to}`} қатардың ішінен ${from}–${to}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} жұлдыз`,\n        emptyLabelText: 'Рейтинг жоқ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Тазарту',\n        closeText: 'Жабу',\n        loadingText: 'Жүктелуде…',\n        noOptionsText: 'Қол жетімді нұсқалар жоқ',\n        openText: 'Ашу'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Жабу'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Беттерді шарлау',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} — бет`;\n            }\n            return `${page} — бетке өту`;\n          }\n          if (type === 'first') {\n            return 'Бірінші бетке өту';\n          }\n          if (type === 'last') {\n            return 'Соңғы бетке өту';\n          }\n          if (type === 'next') {\n            return 'Келесі бетке өту';\n          }\n          // if (type === 'previous') {\n          return 'Алдыңғы бетке өту';\n        }\n      }\n    }\n  }\n};\n\n// Macedonian - Македонски\nexport const mkMK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Прикажи патека'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          }\n          // if (type === 'previous') {\n          return 'Оди на предходна страница';\n        },\n        labelRowsPerPage: 'Редови по страница:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} од ${count !== -1 ? count : `повеќе од ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          return `${value} Ѕвезд${lastDigit === 1 ? 'а' : 'и'}`;\n        },\n        emptyLabelText: 'Празно'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Избриши',\n        closeText: 'Затвори',\n        loadingText: 'Се презема',\n        noOptionsText: 'Нема опција',\n        openText: 'Отвори'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Затвори'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигација низ страници',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Оди на '}страница ${page}`;\n          }\n          if (type === 'first') {\n            return 'Оди на прва страница';\n          }\n          if (type === 'last') {\n            return 'Оди на последна страница';\n          }\n          if (type === 'next') {\n            return 'Оди на следна страница';\n          }\n          // if (type === 'previous') {\n          return 'Оди на предходна страница';\n        }\n      }\n    }\n  }\n};\n\n// Myanmar - မြန်မာ\nexport const myMY = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'လမ်းကြောင်းပြပါ။'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ပထမစာမျက်နှာသို့သွားပါ။';\n          }\n          if (type === 'last') {\n            return 'နောက်ဆုံးစာမျက်နှာသို့သွားပါ။';\n          }\n          if (type === 'next') {\n            return 'နောက်စာမျက်နှာသို့သွားပါ။';\n          }\n          // if (type === 'previous') {\n          return 'ယခင်စာမျက်နှာသို့သွားပါ။';\n        },\n        labelRowsPerPage: 'စာမျက်နှာအလိုက် အတန်းများ:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} ၏ ${count !== -1 ? count : `ထက်ပိုပြီး ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          return `${value} ကြယ်ပွင့်${lastDigit === 1 ? '၎' : ''}`;\n        },\n        emptyLabelText: 'ဗလာ'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'ရှင်းလင်းသော',\n        closeText: 'ပိတ်လိုက်',\n        loadingText: 'ဖွင့်နေသည်…',\n        noOptionsText: 'ရွေးချယ်ခွင့်မရှိပါ။',\n        openText: 'ဖွင့်သည်။'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ပိတ်လိုက်'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Pagination အညွှန်း',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'သွားပါ။ '}စာမျက်နှာ ${page}`;\n          }\n          if (type === 'first') {\n            return 'ပထမစာမျက်နှာသို့သွားပါ။';\n          }\n          if (type === 'last') {\n            return 'နောက်ဆုံးစာမျက်နှာသို့သွားပါ။';\n          }\n          if (type === 'next') {\n            return 'နောက်စာမျက်နှာသို့သွားပါ။';\n          }\n          // if (type === 'previous') {\n          return 'ယခင်စာမျက်နှာသို့သွားပါ။';\n        }\n      }\n    }\n  }\n};\n\n// Malay-Melayu\nexport const msMS = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Tunjukkan laluan'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Pergi ke halaman pertama';\n          }\n          if (type === 'last') {\n            return 'Pergi ke halaman terakhir';\n          }\n          if (type === 'next') {\n            return 'Pergi ke halaman seterusnya';\n          }\n          // if (type === 'previous') {\n          return 'Pergi ke halaman sebelumnya';\n        },\n        labelRowsPerPage: 'Baris setiap halaman:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} daripada ${count !== -1 ? count : `lebih daripada ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          return `${value} Bintang${lastDigit === 1 ? 's' : ''}`;\n        },\n        emptyLabelText: 'kosong'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Jelas',\n        closeText: 'tutup',\n        loadingText: 'Memuatkan…',\n        noOptionsText: 'Tiada pilihan',\n        openText: 'Buka'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'tutup'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigasi penomboran',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Pergi ke '}muka surat ${page}`;\n          }\n          if (type === 'first') {\n            return 'Pergi ke halaman pertama';\n          }\n          if (type === 'last') {\n            return 'Pergi ke halaman terakhir';\n          }\n          if (type === 'next') {\n            return 'Pergi ke halaman seterusnya';\n          }\n          // if (type === 'previous') {\n          return 'Pergi ke halaman sebelumnya';\n        }\n      }\n    }\n  }\n};\n\n// Nepali-नेपाली\nexport const neNP = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'बाटो देखाउनुहोस्'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'पहिलो पृष्ठमा जानुहोस्';\n          }\n          if (type === 'last') {\n            return 'अन्तिम पृष्ठमा जानुहोस्';\n          }\n          if (type === 'next') {\n            return 'अर्को पृष्ठमा जानुहोस्';\n          }\n          // if (type === 'previous') {\n          return 'अघिल्लो पृष्ठमा जानुहोस्';\n        },\n        labelRowsPerPage: 'प्रति पृष्ठ पङ्क्तिहरू:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} को ${count !== -1 ? count : `धेरै ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          return `${value} तारा${lastDigit === 1 ? 'स' : ''}`;\n        },\n        emptyLabelText: 'खाली'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'खाली गर्नुहोस्',\n        closeText: 'बन्द गर्नुहोस्',\n        loadingText: 'लोड हुँदै...',\n        noOptionsText: 'कुनै विकल्प छैन',\n        openText: 'खोल्नुहोस्'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'बन्द गर्नुहोस्'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'पृष्ठांकन नेभिगेसन',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'जाऊ त्यहाँ '}पृष्ठ ${page}`;\n          }\n          if (type === 'first') {\n            return 'पहिलो पृष्ठमा जानुहोस्';\n          }\n          if (type === 'last') {\n            return 'अन्तिम पृष्ठमा जानुहोस्';\n          }\n          if (type === 'next') {\n            return 'अर्को पृष्ठमा जानुहोस्';\n          }\n          // if (type === 'previous') {\n          return 'अघिल्लो पृष्ठमा जानुहोस्';\n        }\n      }\n    }\n  }\n};\nexport const nbNO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n          if (type === 'next') {\n            return 'Gå til neste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til forrige side';\n        },\n        labelRowsPerPage: 'Rader per side:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} av ${count !== -1 ? count : `mer enn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Stjerne${value !== 1 ? 'r' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tøm',\n        closeText: 'Lukk',\n        loadingText: 'Laster inn…',\n        noOptionsText: 'Ingen alternativer',\n        openText: 'Åpne'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Lukk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Paginering navigasjon',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå til '}side ${page}`;\n          }\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n          if (type === 'next') {\n            return 'Gå til neste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til forrige side';\n        }\n      }\n    }\n  }\n};\nexport const nnNO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Vis sti'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n          if (type === 'next') {\n            return 'Gå til neste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til førre side';\n        },\n        labelRowsPerPage: 'Rader per side:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} av ${count !== -1 ? count : `fleire enn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} stjerne${value !== 1 ? 'r' : ''}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Tøm',\n        closeText: 'Lukk',\n        loadingText: 'Lastar inn…',\n        noOptionsText: 'Ingen alternativ',\n        openText: 'Opna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Lukk'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigasjon for paginering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå til '}side ${page}`;\n          }\n          if (type === 'first') {\n            return 'Gå til første side';\n          }\n          if (type === 'last') {\n            return 'Gå til siste side';\n          }\n          if (type === 'next') {\n            return 'Gå til neste side';\n          }\n          // if (type === 'previous') {\n          return 'Gå til førre side';\n        }\n      }\n    }\n  }\n};\nexport const nlNL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pad tonen'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          }\n          // if (type === 'previous') {\n          return 'Ga naar vorige pagina';\n        },\n        labelRowsPerPage: 'Regels per pagina:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} van ${count !== -1 ? count : `meer dan ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Ster${value !== 1 ? 'ren' : ''}`,\n        emptyLabelText: 'Leeg'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wissen',\n        closeText: 'Sluiten',\n        loadingText: 'Laden…',\n        noOptionsText: 'Geen opties',\n        openText: 'Openen'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Sluiten'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigatie via paginering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ga naar '}pagina ${page}`;\n          }\n          if (type === 'first') {\n            return 'Ga naar eerste pagina';\n          }\n          if (type === 'last') {\n            return 'Ga naar laatste pagina';\n          }\n          if (type === 'next') {\n            return 'Ga naar volgende pagina';\n          }\n          // if (type === 'previous') {\n          return 'Ga naar vorige pagina';\n        }\n      }\n    }\n  }\n};\nexport const plPL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaż ścieżkę'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          }\n          // if (type === 'previous') {\n          return 'Przejdź do poprzedniej strony';\n        },\n        labelRowsPerPage: 'Wierszy na stronę:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `ponad ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'gwiazdek';\n          const lastDigit = value % 10;\n          if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'gwiazdki';\n          } else if (value === 1) {\n            pluralForm = 'gwiazdka';\n          }\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Brak gwiazdek'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Wyczyść',\n        closeText: 'Zamknij',\n        loadingText: 'Ładowanie…',\n        noOptionsText: 'Brak opcji',\n        openText: 'Otwórz'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zamknij'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Nawigacja podziału na strony',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return selected ? `${page}. strona` : `Przejdź do ${page}. strony`;\n          }\n          if (type === 'first') {\n            return 'Przejdź do pierwszej strony';\n          }\n          if (type === 'last') {\n            return 'Przejdź do ostatniej strony';\n          }\n          if (type === 'next') {\n            return 'Przejdź do następnej strony';\n          }\n          // if (type === 'previous') {\n          return 'Przejdź do poprzedniej strony';\n        }\n      }\n    }\n  }\n};\nexport const ptBR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Ir para a página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'Carregando…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar pela paginação',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n          if (type === 'first') {\n            return 'Ir para a primeira página';\n          }\n          if (type === 'last') {\n            return 'Ir para a última página';\n          }\n          if (type === 'next') {\n            return 'Ir para a próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Ir para a página anterior';\n        }\n      }\n    }\n  }\n};\nexport const ptPT = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mostrar caminho'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n          if (type === 'last') {\n            return 'Última página';\n          }\n          if (type === 'next') {\n            return 'Próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Página anterior';\n        },\n        labelRowsPerPage: 'Linhas por página:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Estrela${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Vazio'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Limpar',\n        closeText: 'Fechar',\n        loadingText: 'A carregar…',\n        noOptionsText: 'Sem opções',\n        openText: 'Abrir'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Fechar'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navegar por páginas',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ir para a '}página ${page}`;\n          }\n          if (type === 'first') {\n            return 'Primeira página';\n          }\n          if (type === 'last') {\n            return 'Última página';\n          }\n          if (type === 'next') {\n            return 'Próxima página';\n          }\n          // if (type === 'previous') {\n          return 'Página anterior';\n        }\n      }\n    }\n  }\n};\nexport const roRO = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Arată calea'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          }\n          // if (type === 'previous') {\n          return 'Mergi la pagina precedentă';\n        },\n        labelRowsPerPage: 'Rânduri pe pagină:'\n        // labelDisplayedRows: ({ from, to, count }) =>\n        //   `${from}–${to} din ${count !== -1 ? count : `more than ${to}`}`,\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} St${value !== 1 ? 'ele' : 'ea'}`,\n        emptyLabelText: 'Gol'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Șterge',\n        closeText: 'Închide',\n        loadingText: 'Se încarcă…',\n        noOptionsText: 'Nicio opțiune',\n        openText: 'Deschide'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Închide'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigare prin paginare',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Mergi la '}pagina ${page}`;\n          }\n          if (type === 'first') {\n            return 'Mergi la prima pagină';\n          }\n          if (type === 'last') {\n            return 'Mergi la ultima pagină';\n          }\n          if (type === 'next') {\n            return 'Mergi la pagina următoare';\n          }\n          // if (type === 'previous') {\n          return 'Mergi la pagina precedentă';\n        }\n      }\n    }\n  }\n};\n\n// Serbian - Srpski\nexport const srRS = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Pokaži putanju'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na poslednju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        },\n        labelRowsPerPage: 'Redova po stranici:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          const lastDigit = value % 10;\n          const lastTwoDigits = value % 100;\n          if ([2, 3, 4].includes(lastDigit) && ![12, 13, 14].includes(lastTwoDigits)) {\n            return 'Zvezde';\n          }\n          return 'Zvezda';\n        },\n        emptyLabelText: 'Prazno'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Briši',\n        closeText: 'Zatvori',\n        loadingText: 'Učitavanje…',\n        noOptionsText: 'Nema opcija',\n        openText: 'Otvori'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zatvori'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigacija po stranicama',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Idi na '}stranicu ${page}`;\n          }\n          if (type === 'first') {\n            return 'Idi na prvu stranicu';\n          }\n          if (type === 'last') {\n            return 'Idi na zadnju stranicu';\n          }\n          if (type === 'next') {\n            return 'Idi na sledeću stranicu';\n          }\n          // if (type === 'previous') {\n          return 'Idi na prethodnu stranicu';\n        }\n      }\n    }\n  }\n};\nexport const ruRU = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показать полный путь'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на предыдущую страницу';\n        },\n        labelRowsPerPage: 'Строк на странице:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} из ${count !== -1 ? count : `более чем ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Звёзд';\n          const lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Звезды';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Звезда';\n          }\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг отсутствует'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистить',\n        closeText: 'Закрыть',\n        loadingText: 'Загрузка…',\n        noOptionsText: 'Нет доступных вариантов',\n        openText: 'Открыть'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Закрыть'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навигация по страницам',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            if (selected) {\n              return `${page} страница`;\n            }\n            return `Перейти на ${page} страницу`;\n          }\n          if (type === 'first') {\n            return 'Перейти на первую страницу';\n          }\n          if (type === 'last') {\n            return 'Перейти на последнюю страницу';\n          }\n          if (type === 'next') {\n            return 'Перейти на следующую страницу';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на предыдущую страницу';\n        }\n      }\n    }\n  }\n};\nexport const siLK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'ගමන් මඟ පෙන්වන්න'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          }\n          // if (type === 'previous') {\n          return 'පෙර පිටුවට යන්න';\n        },\n        labelRowsPerPage: 'පිටුවක පේළි:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} දක්වා ${count !== -1 ? count : `${to} ට වැඩි ප්‍රමාණයකින්`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `තරු ${value}`,\n        emptyLabelText: 'හිස්'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'මකන්න',\n        closeText: 'වසන්න',\n        loadingText: 'නැංවෙමින්…',\n        noOptionsText: 'විකල්ප නැත',\n        openText: 'විවෘත කරන්න'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'වසන්න'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'පිටු අතර සංචරණය',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `පිටුව ${page} ${selected ? '' : 'ට යන්න'}`;\n          }\n          if (type === 'first') {\n            return 'පළමු පිටුවට යන්න';\n          }\n          if (type === 'last') {\n            return 'අවසාන පිටුවට යන්න';\n          }\n          if (type === 'next') {\n            return 'මීළඟ පිටුවට යන්න';\n          }\n          // if (type === 'previous') {\n          return 'පෙර පිටුවට යන්න';\n        }\n      }\n    }\n  }\n};\nexport const skSK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ukázať cestu '\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          }\n          // if (type === 'previous') {\n          return 'Ísť na predchádzajúcu stránku';\n        },\n        labelRowsPerPage: 'Riadkov na stránke:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} z ${count !== -1 ? count : `viac ako ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          if (value === 1) {\n            return `${value} hviezdička`;\n          }\n          if (value >= 2 && value <= 4) {\n            return `${value} hviezdičky`;\n          }\n          return `${value} hviezdičiek`;\n        },\n        emptyLabelText: 'Prázdne'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Vymazať',\n        closeText: 'Zavrieť',\n        loadingText: 'Načítanie…',\n        noOptionsText: 'Žiadne možnosti',\n        openText: 'Otvoriť'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Zavrieť'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Navigácia stránkovanim',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Ísť na '}stránku ${page}`;\n          }\n          if (type === 'first') {\n            return 'Ísť na prvú stránku';\n          }\n          if (type === 'last') {\n            return 'Ísť na poslednú stránku';\n          }\n          if (type === 'next') {\n            return 'Ísť na ďaľšiu stránku';\n          }\n          // if (type === 'previous') {\n          return 'Ísť na predchádzajúcu stránku';\n        }\n      }\n    }\n  }\n};\nexport const svSE = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Visa sökväg'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          }\n          // if (type === 'previous') {\n          return 'Gå till föregående sida';\n        },\n        labelRowsPerPage: 'Rader per sida:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} av ${count !== -1 ? count : `fler än ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ${value !== 1 ? 'Stjärnor' : 'Stjärna'}`,\n        emptyLabelText: 'Tom'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Rensa',\n        closeText: 'Stäng',\n        loadingText: 'Laddar…',\n        noOptionsText: 'Inga alternativ',\n        openText: 'Öppna'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Stäng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sidnavigering',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Gå till '}sida ${page}`;\n          }\n          if (type === 'first') {\n            return 'Gå till första sidan';\n          }\n          if (type === 'last') {\n            return 'Gå till sista sidan';\n          }\n          if (type === 'next') {\n            return 'Gå till nästa sida';\n          }\n          // if (type === 'previous') {\n          return 'Gå till föregående sida';\n        }\n      }\n    }\n  }\n};\nexport const thTH = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'แสดงเส้นทาง'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          }\n          // if (type === 'previous') {\n          return 'ไปที่หน้าก่อน';\n        },\n        labelRowsPerPage: 'จำนวนแถวต่อหน้า:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} จาก ${count !== -1 ? count : `มากกว่า ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ดาว`,\n        emptyLabelText: 'ว่างเปล่า'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'เคลียร์',\n        closeText: 'ปิด',\n        loadingText: 'กำลังโหลด…',\n        noOptionsText: 'ไม่มีตัวเลือก',\n        openText: 'เปิด'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'ปิด'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': '',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'ไปที่'}หน้า ${page}`;\n          }\n          if (type === 'first') {\n            return 'ไปที่หน้าแรก';\n          }\n          if (type === 'last') {\n            return 'ไปที่หน้าสุดท้าย';\n          }\n          if (type === 'next') {\n            return 'ไปที่หน้าถัดไป';\n          }\n          // if (type === 'previous') {\n          return 'ไปที่หน้าก่อน';\n        }\n      }\n    }\n  }\n};\nexport const trTR = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Yolu göster'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          }\n          // if (type === 'previous') {\n          return 'Önceki sayfaya git';\n        },\n        labelRowsPerPage: 'Sayfa başına satır:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}-${to} / ${count !== -1 ? count : `${to}'den fazla`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Yıldız`,\n        emptyLabelText: 'Boş'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Temizle',\n        closeText: 'Kapat',\n        loadingText: 'Yükleniyor…',\n        noOptionsText: 'Seçenek yok',\n        openText: 'Aç'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Kapat'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sayfa navigasyonu',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${page}. ${selected ? 'sayfa' : 'sayfaya git'}`;\n          }\n          if (type === 'first') {\n            return 'İlk sayfaya git';\n          }\n          if (type === 'last') {\n            return 'Son sayfaya git';\n          }\n          if (type === 'next') {\n            return 'Sonraki sayfaya git';\n          }\n          // if (type === 'previous') {\n          return 'Önceki sayfaya git';\n        }\n      }\n    }\n  }\n};\n\n// Tagalog-Tagalog\nexport const tlTL = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Ipakita ang landas'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Pumunta sa unang pahina';\n          }\n          if (type === 'last') {\n            return 'Pumunta sa huling pahina';\n          }\n          if (type === 'next') {\n            return 'Pumunta sa susunod na pahina';\n          }\n          // if (type === 'previous') {\n          return 'Pumunta sa nakaraang pahina';\n        },\n        labelRowsPerPage: 'Mga hilera bawat pahina:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} ng ${count !== -1 ? count : `higit sa ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} Bituin${value !== 1 ? 's' : ''}`,\n        emptyLabelText: 'Walang laman'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Maaliwalas',\n        closeText: 'Isara',\n        loadingText: 'Naglo-load…',\n        noOptionsText: 'Walang mga pagpipilian',\n        openText: 'Bukas'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Isara'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Sayfa navigasyonu',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Pumunta sa'}pahina ${page}`;\n          }\n          if (type === 'first') {\n            return 'Pumunta sa unang pahina';\n          }\n          if (type === 'last') {\n            return 'Pumunta sa huling pahina';\n          }\n          if (type === 'next') {\n            return 'Pumunta sa susunod na pahina';\n          }\n          // if (type === 'previous') {\n          return 'Pumunta sa nakaraang pahina';\n        }\n      }\n    }\n  }\n};\nexport const ukUA = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Показати шлях сторінок'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на попередню сторінку';\n        },\n        labelRowsPerPage: 'Рядків на сторінці:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} з ${count !== -1 ? count : `понад ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => {\n          let pluralForm = 'Зірок';\n          const lastDigit = value % 10;\n          if (lastDigit > 1 && lastDigit < 5) {\n            pluralForm = 'Зірки';\n          } else if (lastDigit === 1) {\n            pluralForm = 'Зірка';\n          }\n          return `${value} ${pluralForm}`;\n        },\n        emptyLabelText: 'Рейтинг відсутній'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Очистити',\n        closeText: 'Згорнути',\n        loadingText: 'Завантаження…',\n        noOptionsText: 'Немає варіантів',\n        openText: 'Розгорнути'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Згорнути'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Навігація сторінками',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Перейти на '}сторінку ${page}`;\n          }\n          if (type === 'first') {\n            return 'Перейти на першу сторінку';\n          }\n          if (type === 'last') {\n            return 'Перейти на останню сторінку';\n          }\n          if (type === 'next') {\n            return 'Перейти на наступну сторінку';\n          }\n          // if (type === 'previous') {\n          return 'Перейти на попередню сторінку';\n        }\n      }\n    }\n  }\n};\nexport const urPK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'راستہ دکھائیں'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'پہلے صفحے پر جائیں';\n          }\n          if (type === 'last') {\n            return 'آخری صفحے پر جائیں';\n          }\n          if (type === 'next') {\n            return 'اگلے صفحے پر جائیں';\n          }\n          // if (type === 'previous') {\n          return 'پچھلے صفحے پر جائیں';\n        },\n        labelRowsPerPage: 'ایک صفحے پر قطاریں:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${count !== -1 ? `${count} میں سے` : `${to} سے ذیادہ میں سے`} ${from} سے ${to} قطاریں`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} ستار${value !== 1 ? 'ے' : 'ہ'}`,\n        emptyLabelText: 'خالی'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'کلئیر',\n        closeText: 'بند کریں',\n        loadingText: 'لوڈ ہو رہا ہے۔۔۔',\n        noOptionsText: 'کوئی آپشن نہیں',\n        openText: 'کھولیں'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'بند کریں'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'صفحات کی ترتیب',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `صفحہ نمبر ${page}${selected ? '' : ' پر جائیں'}`;\n          }\n          if (type === 'first') {\n            return 'پہلے صفحے پر جائیں';\n          }\n          if (type === 'last') {\n            return 'آخری صفحے پر جائیں';\n          }\n          if (type === 'next') {\n            return 'اگلے صفحے پر جائیں';\n          }\n          // if (type === 'previous') {\n          return 'پچھلے صفحے پر جائیں';\n        }\n      }\n    }\n  }\n};\nexport const viVN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: 'Mở ra'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          }\n          // if (type === 'previous') {\n          return 'Về trang trước đó';\n        },\n        labelRowsPerPage: 'Số hàng mỗi trang:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from}–${to} trong ${count !== -1 ? count : `nhiều hơn ${to}`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} sao`,\n        emptyLabelText: 'Không có dữ liệu'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: 'Xóa',\n        closeText: 'Đóng',\n        loadingText: 'Đang tải…',\n        noOptionsText: 'Không có lựa chọn nào',\n        openText: 'Mở'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: 'Đóng'\n      }\n    },\n    MuiPagination: {\n      defaultProps: {\n        'aria-label': 'Thanh điều khiển trang',\n        getItemAriaLabel: (type, page, selected) => {\n          if (type === 'page') {\n            return `${selected ? '' : 'Tới '}trang ${page}`;\n          }\n          if (type === 'first') {\n            return 'Tới trang đầu tiên';\n          }\n          if (type === 'last') {\n            return 'Tới trang cuối cùng';\n          }\n          if (type === 'next') {\n            return 'Tới trang tiếp theo';\n          }\n          // if (type === 'previous') {\n          return 'Về trang trước đó';\n        }\n      }\n    }\n  }\n};\nexport const zhCN = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展开'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一页';\n          }\n          if (type === 'last') {\n            return '最后一页';\n          }\n          if (type === 'next') {\n            return '下一页';\n          }\n          return '上一页';\n        },\n        labelRowsPerPage: '每页行数:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 条到第 ${to} 条，${count !== -1 ? `共 ${count} 条` : `至少 ${to} 条`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 颗星`,\n        emptyLabelText: '无标签'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '关闭',\n        loadingText: '加载中……',\n        noOptionsText: '没有可用选项',\n        openText: '打开'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '关闭'\n      }\n    }\n  }\n};\nexport const zhHK = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n          if (type === 'last') {\n            return '最後一頁';\n          }\n          if (type === 'next') {\n            return '下一頁';\n          }\n          return '上一頁';\n        },\n        labelRowsPerPage: '每頁行數:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `第 ${from} 項至第 ${to} 項，${count !== -1 ? `共 ${count} 項` : `超過 ${to} 項`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 粒星`,\n        emptyLabelText: '無標籤'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清除',\n        closeText: '關閉',\n        loadingText: '載入中……',\n        noOptionsText: '沒有可用選項',\n        openText: '開啟'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};\nexport const zhTW = {\n  components: {\n    MuiBreadcrumbs: {\n      defaultProps: {\n        expandText: '展開'\n      }\n    },\n    MuiTablePagination: {\n      defaultProps: {\n        getItemAriaLabel: type => {\n          if (type === 'first') {\n            return '第一頁';\n          }\n          if (type === 'last') {\n            return '最後一頁';\n          }\n          if (type === 'next') {\n            return '下一頁';\n          }\n          return '上一頁';\n        },\n        labelRowsPerPage: '每頁數量:',\n        labelDisplayedRows: ({\n          from,\n          to,\n          count\n        }) => `${from} ~ ${to} / ${count !== -1 ? count : `${to} 以上`}`\n      }\n    },\n    MuiRating: {\n      defaultProps: {\n        getLabelText: value => `${value} 顆星`,\n        emptyLabelText: '無標籤'\n      }\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        clearText: '清空',\n        closeText: '關閉',\n        loadingText: '載入中…',\n        noOptionsText: '沒有可用選項',\n        openText: '打開'\n      }\n    },\n    MuiAlert: {\n      defaultProps: {\n        closeText: '關閉'\n      }\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}